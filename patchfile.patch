From d3f93a2951838d328c504c43c632a945ab965b9f Mon Sep 17 00:00:00 2001
From: ambarbhatnagar <ambar0099@gmail.com>
Date: Wed, 15 Feb 2023 14:05:49 +0100
Subject: [PATCH] first commit

---
 package-lock.json                          | 414 +++++++++-
 package.json                               |   4 +
 src/App.js                                 | 904 ++++++++++++++++++++-
 src/App.scss                               |  14 +
 src/components/header/index.js             |   5 +-
 src/components/home/index.js               |  25 +-
 src/components/home/view/coupons_screen.js |  30 +-
 src/components/home/view/details.js        |  64 ++
 src/components/home/view/social_media.js   |  45 +-
 src/components/home/view/welcome.js        |  41 +-
 src/components/shared/app_btn.js           |  11 +-
 src/components/shared/font-upload-modal.js |  65 ++
 src/components/shared/group_icon.js        |  34 +-
 src/components/shared/shared.scss          |  30 +-
 src/components/shared/upload-fonts.js      |  69 ++
 src/components/shared/util.js              |  10 +
 src/components/shared/view_header.js       |  11 +-
 src/components/shared/view_title.js        |   7 +-
 src/components/sidebar/index.js            | 370 ++++++++-
 src/components/sidebar/sidebar.scss        | 245 +++++-
 src/state/reducer/gift_card.js             |  59 +-
 21 files changed, 2335 insertions(+), 122 deletions(-)
 create mode 100644 src/components/home/view/details.js
 create mode 100644 src/components/shared/font-upload-modal.js
 create mode 100644 src/components/shared/upload-fonts.js
 create mode 100644 src/components/shared/util.js

diff --git a/package-lock.json b/package-lock.json
index f692204..5a1a441 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -17,15 +17,19 @@
         "cors": "^2.8.5",
         "express": "^4.18.2",
         "express-graphql": "^0.12.0",
+        "font-picker-react": "^3.5.2",
         "graphql": "^16.6.0",
+        "lodash": "^4.17.21",
         "nodemon": "^2.0.20",
         "react": "^18.2.0",
         "react-bootstrap": "^2.7.0",
+        "react-colorful": "^5.6.1",
         "react-dom": "^18.2.0",
         "react-icons": "^4.7.1",
         "react-redux": "^8.0.5",
         "react-router-dom": "^6.6.1",
         "react-scripts": "5.0.1",
+        "react-select": "^5.7.0",
         "redux": "^4.2.0",
         "sass": "^1.57.1",
         "web-vitals": "^2.1.4"
@@ -2150,6 +2154,136 @@
         "postcss-selector-parser": "^6.0.10"
       }
     },
+    "node_modules/@emotion/babel-plugin": {
+      "version": "11.10.5",
+      "resolved": "https://registry.npmjs.org/@emotion/babel-plugin/-/babel-plugin-11.10.5.tgz",
+      "integrity": "sha512-xE7/hyLHJac7D2Ve9dKroBBZqBT7WuPQmWcq7HSGb84sUuP4mlOWoB8dvVfD9yk5DHkU1m6RW7xSoDtnQHNQeA==",
+      "dependencies": {
+        "@babel/helper-module-imports": "^7.16.7",
+        "@babel/plugin-syntax-jsx": "^7.17.12",
+        "@babel/runtime": "^7.18.3",
+        "@emotion/hash": "^0.9.0",
+        "@emotion/memoize": "^0.8.0",
+        "@emotion/serialize": "^1.1.1",
+        "babel-plugin-macros": "^3.1.0",
+        "convert-source-map": "^1.5.0",
+        "escape-string-regexp": "^4.0.0",
+        "find-root": "^1.1.0",
+        "source-map": "^0.5.7",
+        "stylis": "4.1.3"
+      },
+      "peerDependencies": {
+        "@babel/core": "^7.0.0"
+      }
+    },
+    "node_modules/@emotion/babel-plugin/node_modules/escape-string-regexp": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
+      "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/@emotion/babel-plugin/node_modules/source-map": {
+      "version": "0.5.7",
+      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz",
+      "integrity": "sha512-LbrmJOMUSdEVxIKvdcJzQC+nQhe8FUZQTXQy6+I75skNgn3OoQ0DZA8YnFa7gp8tqtL3KPf1kmo0R5DoApeSGQ==",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/@emotion/cache": {
+      "version": "11.10.5",
+      "resolved": "https://registry.npmjs.org/@emotion/cache/-/cache-11.10.5.tgz",
+      "integrity": "sha512-dGYHWyzTdmK+f2+EnIGBpkz1lKc4Zbj2KHd4cX3Wi8/OWr5pKslNjc3yABKH4adRGCvSX4VDC0i04mrrq0aiRA==",
+      "dependencies": {
+        "@emotion/memoize": "^0.8.0",
+        "@emotion/sheet": "^1.2.1",
+        "@emotion/utils": "^1.2.0",
+        "@emotion/weak-memoize": "^0.3.0",
+        "stylis": "4.1.3"
+      }
+    },
+    "node_modules/@emotion/hash": {
+      "version": "0.9.0",
+      "resolved": "https://registry.npmjs.org/@emotion/hash/-/hash-0.9.0.tgz",
+      "integrity": "sha512-14FtKiHhy2QoPIzdTcvh//8OyBlknNs2nXRwIhG904opCby3l+9Xaf/wuPvICBF0rc1ZCNBd3nKe9cd2mecVkQ=="
+    },
+    "node_modules/@emotion/memoize": {
+      "version": "0.8.0",
+      "resolved": "https://registry.npmjs.org/@emotion/memoize/-/memoize-0.8.0.tgz",
+      "integrity": "sha512-G/YwXTkv7Den9mXDO7AhLWkE3q+I92B+VqAE+dYG4NGPaHZGvt3G8Q0p9vmE+sq7rTGphUbAvmQ9YpbfMQGGlA=="
+    },
+    "node_modules/@emotion/react": {
+      "version": "11.10.5",
+      "resolved": "https://registry.npmjs.org/@emotion/react/-/react-11.10.5.tgz",
+      "integrity": "sha512-TZs6235tCJ/7iF6/rvTaOH4oxQg2gMAcdHemjwLKIjKz4rRuYe1HJ2TQJKnAcRAfOUDdU8XoDadCe1rl72iv8A==",
+      "dependencies": {
+        "@babel/runtime": "^7.18.3",
+        "@emotion/babel-plugin": "^11.10.5",
+        "@emotion/cache": "^11.10.5",
+        "@emotion/serialize": "^1.1.1",
+        "@emotion/use-insertion-effect-with-fallbacks": "^1.0.0",
+        "@emotion/utils": "^1.2.0",
+        "@emotion/weak-memoize": "^0.3.0",
+        "hoist-non-react-statics": "^3.3.1"
+      },
+      "peerDependencies": {
+        "@babel/core": "^7.0.0",
+        "react": ">=16.8.0"
+      },
+      "peerDependenciesMeta": {
+        "@babel/core": {
+          "optional": true
+        },
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@emotion/serialize": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/@emotion/serialize/-/serialize-1.1.1.tgz",
+      "integrity": "sha512-Zl/0LFggN7+L1liljxXdsVSVlg6E/Z/olVWpfxUTxOAmi8NU7YoeWeLfi1RmnB2TATHoaWwIBRoL+FvAJiTUQA==",
+      "dependencies": {
+        "@emotion/hash": "^0.9.0",
+        "@emotion/memoize": "^0.8.0",
+        "@emotion/unitless": "^0.8.0",
+        "@emotion/utils": "^1.2.0",
+        "csstype": "^3.0.2"
+      }
+    },
+    "node_modules/@emotion/sheet": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/@emotion/sheet/-/sheet-1.2.1.tgz",
+      "integrity": "sha512-zxRBwl93sHMsOj4zs+OslQKg/uhF38MB+OMKoCrVuS0nyTkqnau+BM3WGEoOptg9Oz45T/aIGs1qbVAsEFo3nA=="
+    },
+    "node_modules/@emotion/unitless": {
+      "version": "0.8.0",
+      "resolved": "https://registry.npmjs.org/@emotion/unitless/-/unitless-0.8.0.tgz",
+      "integrity": "sha512-VINS5vEYAscRl2ZUDiT3uMPlrFQupiKgHz5AA4bCH1miKBg4qtwkim1qPmJj/4WG6TreYMY111rEFsjupcOKHw=="
+    },
+    "node_modules/@emotion/use-insertion-effect-with-fallbacks": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/@emotion/use-insertion-effect-with-fallbacks/-/use-insertion-effect-with-fallbacks-1.0.0.tgz",
+      "integrity": "sha512-1eEgUGmkaljiBnRMTdksDV1W4kUnmwgp7X9G8B++9GYwl1lUdqSndSriIrTJ0N7LQaoauY9JJ2yhiOYK5+NI4A==",
+      "peerDependencies": {
+        "react": ">=16.8.0"
+      }
+    },
+    "node_modules/@emotion/utils": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/@emotion/utils/-/utils-1.2.0.tgz",
+      "integrity": "sha512-sn3WH53Kzpw8oQ5mgMmIzzyAaH2ZqFEbozVVBSYp538E06OSE6ytOp7pRAjNQR+Q/orwqdQYJSe2m3hCOeznkw=="
+    },
+    "node_modules/@emotion/weak-memoize": {
+      "version": "0.3.0",
+      "resolved": "https://registry.npmjs.org/@emotion/weak-memoize/-/weak-memoize-0.3.0.tgz",
+      "integrity": "sha512-AHPmaAx+RYfZz0eYu6Gviiagpmiyw98ySSlQvCUhVGDRtDFe4DBS0x1bSjdF3gqUDYOczB+yYvBTtEylYSdRhg=="
+    },
     "node_modules/@eslint/eslintrc": {
       "version": "1.4.1",
       "resolved": "https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-1.4.1.tgz",
@@ -2213,6 +2347,19 @@
         "url": "https://github.com/sponsors/sindresorhus"
       }
     },
+    "node_modules/@floating-ui/core": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/@floating-ui/core/-/core-1.2.0.tgz",
+      "integrity": "sha512-GHUXPEhMEmTpnpIfesFA2KAoMJPb1SPQw964tToQwt+BbGXdhqTCWT1rOb0VURGylsxsYxiGMnseJ3IlclVpVA=="
+    },
+    "node_modules/@floating-ui/dom": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/@floating-ui/dom/-/dom-1.2.0.tgz",
+      "integrity": "sha512-QXzg57o1cjLz3cGETzKXjI3kx1xyS49DW9l7kV2jw2c8Yftd434t2hllX0sVGn2Q8MtcW/4pNm8bfE1/4n6mng==",
+      "dependencies": {
+        "@floating-ui/core": "^1.2.0"
+      }
+    },
     "node_modules/@humanwhocodes/config-array": {
       "version": "0.11.8",
       "resolved": "https://registry.npmjs.org/@humanwhocodes/config-array/-/config-array-0.11.8.tgz",
@@ -3264,6 +3411,14 @@
       "resolved": "https://registry.npmjs.org/@rushstack/eslint-patch/-/eslint-patch-1.2.0.tgz",
       "integrity": "sha512-sXo/qW2/pAcmT43VoRKOJbDOfV3cYpq3szSVfIThQXNt+E4DfKj361vaAt3c88U5tPUxzEswam7GW48PJqtKAg=="
     },
+    "node_modules/@samuelmeuli/font-manager": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/@samuelmeuli/font-manager/-/font-manager-1.4.0.tgz",
+      "integrity": "sha512-TaPoX4qA6ABrACiSI18lQOOKjvbLNrT+84UWfzwcguWQ4nT+sprOSRyt/RVXnt9fQp/wFQVC2NcHbzd+AkXffg==",
+      "dependencies": {
+        "@babel/runtime": "^7.7.4"
+      }
+    },
     "node_modules/@sinclair/typebox": {
       "version": "0.24.51",
       "resolved": "https://registry.npmjs.org/@sinclair/typebox/-/typebox-0.24.51.tgz",
@@ -4192,9 +4347,9 @@
       "integrity": "sha512-EEhsLsD6UsDM1yFhAvy0Cjr6VwmpMWqFBCb9w07wVugF7w9nfajxLuVmngTIpgS6svCnm6Vaw+MZhoDCKnOfsw=="
     },
     "node_modules/@types/react": {
-      "version": "18.0.26",
-      "resolved": "https://registry.npmjs.org/@types/react/-/react-18.0.26.tgz",
-      "integrity": "sha512-hCR3PJQsAIXyxhTNSiDFY//LhnMZWpNNr5etoCqx/iUfGc5gXWtQR2Phl908jVR6uPXacojQWTg4qRpkxTuGug==",
+      "version": "16.14.35",
+      "resolved": "https://registry.npmjs.org/@types/react/-/react-16.14.35.tgz",
+      "integrity": "sha512-NUEiwmSS1XXtmBcsm1NyRRPYjoZF2YTE89/5QiLt5mlGffYK9FQqOKuOLuXNrjPQV04oQgaZG+Yq02ZfHoFyyg==",
       "dependencies": {
         "@types/prop-types": "*",
         "@types/scheduler": "*",
@@ -8387,6 +8542,11 @@
         "url": "https://github.com/avajs/find-cache-dir?sponsor=1"
       }
     },
+    "node_modules/find-root": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/find-root/-/find-root-1.1.0.tgz",
+      "integrity": "sha512-NKfW6bec6GfKc0SGx1e07QZY9PE99u0Bft/0rzSD5k3sO/vwkVUpDUKVm5Gpp5Ue3YfShPFTX2070tDs5kB9Ng=="
+    },
     "node_modules/find-up": {
       "version": "5.0.0",
       "resolved": "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz",
@@ -8438,6 +8598,18 @@
         }
       }
     },
+    "node_modules/font-picker-react": {
+      "version": "3.5.2",
+      "resolved": "https://registry.npmjs.org/font-picker-react/-/font-picker-react-3.5.2.tgz",
+      "integrity": "sha512-0JkWIDf2hi6JwnvjIiacLDhO+Sl38RQ4mUGhCWN+Hvj95XalVZ0Aq5zJs/Ybend4uk2yI9rd1QhRRF9RnfHqIQ==",
+      "dependencies": {
+        "@samuelmeuli/font-manager": "^1.4.0"
+      },
+      "peerDependencies": {
+        "@types/react": "^16.0.0",
+        "react": "^16.0.0"
+      }
+    },
     "node_modules/for-each": {
       "version": "0.3.3",
       "resolved": "https://registry.npmjs.org/for-each/-/for-each-0.3.3.tgz",
@@ -12254,6 +12426,11 @@
         "node": ">= 4.0.0"
       }
     },
+    "node_modules/memoize-one": {
+      "version": "6.0.0",
+      "resolved": "https://registry.npmjs.org/memoize-one/-/memoize-one-6.0.0.tgz",
+      "integrity": "sha512-rkpe71W0N0c0Xz6QD0eJETuWAJGnJ9afsl1srmwPrI+yBCkge5EycXXbYRyvL29zZVUWQCY7InPRCv3GDXuZNw=="
+    },
     "node_modules/merge-descriptors": {
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz",
@@ -14642,6 +14819,15 @@
         }
       }
     },
+    "node_modules/react-colorful": {
+      "version": "5.6.1",
+      "resolved": "https://registry.npmjs.org/react-colorful/-/react-colorful-5.6.1.tgz",
+      "integrity": "sha512-1exovf0uGTGyq5mXQT0zgQ80uvj2PCwvF8zY1RN9/vbJVSjSo3fsB/4L3ObbF7u70NduSiK4xu4Y6q1MHoUGEw==",
+      "peerDependencies": {
+        "react": ">=16.8.0",
+        "react-dom": ">=16.8.0"
+      }
+    },
     "node_modules/react-dev-utils": {
       "version": "12.0.1",
       "resolved": "https://registry.npmjs.org/react-dev-utils/-/react-dev-utils-12.0.1.tgz",
@@ -14947,6 +15133,26 @@
         }
       }
     },
+    "node_modules/react-select": {
+      "version": "5.7.0",
+      "resolved": "https://registry.npmjs.org/react-select/-/react-select-5.7.0.tgz",
+      "integrity": "sha512-lJGiMxCa3cqnUr2Jjtg9YHsaytiZqeNOKeibv6WF5zbK/fPegZ1hg3y/9P1RZVLhqBTs0PfqQLKuAACednYGhQ==",
+      "dependencies": {
+        "@babel/runtime": "^7.12.0",
+        "@emotion/cache": "^11.4.0",
+        "@emotion/react": "^11.8.1",
+        "@floating-ui/dom": "^1.0.1",
+        "@types/react-transition-group": "^4.4.0",
+        "memoize-one": "^6.0.0",
+        "prop-types": "^15.6.0",
+        "react-transition-group": "^4.3.0",
+        "use-isomorphic-layout-effect": "^1.1.2"
+      },
+      "peerDependencies": {
+        "react": "^16.8.0 || ^17.0.0 || ^18.0.0",
+        "react-dom": "^16.8.0 || ^17.0.0 || ^18.0.0"
+      }
+    },
     "node_modules/react-transition-group": {
       "version": "4.4.5",
       "resolved": "https://registry.npmjs.org/react-transition-group/-/react-transition-group-4.4.5.tgz",
@@ -16143,6 +16349,11 @@
         "postcss": "^8.2.15"
       }
     },
+    "node_modules/stylis": {
+      "version": "4.1.3",
+      "resolved": "https://registry.npmjs.org/stylis/-/stylis-4.1.3.tgz",
+      "integrity": "sha512-GP6WDNWf+o403jrEp9c5jibKavrtLW+/qYGhFxFrG8maXhwTBI7gLLhiBb0o7uFccWN+EOS9aMO6cGHWAO07OA=="
+    },
     "node_modules/supports-color": {
       "version": "5.5.0",
       "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
@@ -16844,6 +17055,19 @@
         "requires-port": "^1.0.0"
       }
     },
+    "node_modules/use-isomorphic-layout-effect": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/use-isomorphic-layout-effect/-/use-isomorphic-layout-effect-1.1.2.tgz",
+      "integrity": "sha512-49L8yCO3iGT/ZF9QttjwLF/ZD9Iwto5LnH5LmEdk/6cFmXddqi2ulF0edxTwjj+7mqvpVVGQWvbXZdn32wRSHA==",
+      "peerDependencies": {
+        "react": "^16.8.0 || ^17.0.0 || ^18.0.0"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
     "node_modules/use-sync-external-store": {
       "version": "1.2.0",
       "resolved": "https://registry.npmjs.org/use-sync-external-store/-/use-sync-external-store-1.2.0.tgz",
@@ -19247,6 +19471,112 @@
       "integrity": "sha512-IkpVW/ehM1hWKln4fCA3NzJU8KwD+kIOvPZA4cqxoJHtE21CCzjyp+Kxbu0i5I4tBNOlXPL9mjwnWlL0VEG4Fg==",
       "requires": {}
     },
+    "@emotion/babel-plugin": {
+      "version": "11.10.5",
+      "resolved": "https://registry.npmjs.org/@emotion/babel-plugin/-/babel-plugin-11.10.5.tgz",
+      "integrity": "sha512-xE7/hyLHJac7D2Ve9dKroBBZqBT7WuPQmWcq7HSGb84sUuP4mlOWoB8dvVfD9yk5DHkU1m6RW7xSoDtnQHNQeA==",
+      "requires": {
+        "@babel/helper-module-imports": "^7.16.7",
+        "@babel/plugin-syntax-jsx": "^7.17.12",
+        "@babel/runtime": "^7.18.3",
+        "@emotion/hash": "^0.9.0",
+        "@emotion/memoize": "^0.8.0",
+        "@emotion/serialize": "^1.1.1",
+        "babel-plugin-macros": "^3.1.0",
+        "convert-source-map": "^1.5.0",
+        "escape-string-regexp": "^4.0.0",
+        "find-root": "^1.1.0",
+        "source-map": "^0.5.7",
+        "stylis": "4.1.3"
+      },
+      "dependencies": {
+        "escape-string-regexp": {
+          "version": "4.0.0",
+          "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
+          "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA=="
+        },
+        "source-map": {
+          "version": "0.5.7",
+          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz",
+          "integrity": "sha512-LbrmJOMUSdEVxIKvdcJzQC+nQhe8FUZQTXQy6+I75skNgn3OoQ0DZA8YnFa7gp8tqtL3KPf1kmo0R5DoApeSGQ=="
+        }
+      }
+    },
+    "@emotion/cache": {
+      "version": "11.10.5",
+      "resolved": "https://registry.npmjs.org/@emotion/cache/-/cache-11.10.5.tgz",
+      "integrity": "sha512-dGYHWyzTdmK+f2+EnIGBpkz1lKc4Zbj2KHd4cX3Wi8/OWr5pKslNjc3yABKH4adRGCvSX4VDC0i04mrrq0aiRA==",
+      "requires": {
+        "@emotion/memoize": "^0.8.0",
+        "@emotion/sheet": "^1.2.1",
+        "@emotion/utils": "^1.2.0",
+        "@emotion/weak-memoize": "^0.3.0",
+        "stylis": "4.1.3"
+      }
+    },
+    "@emotion/hash": {
+      "version": "0.9.0",
+      "resolved": "https://registry.npmjs.org/@emotion/hash/-/hash-0.9.0.tgz",
+      "integrity": "sha512-14FtKiHhy2QoPIzdTcvh//8OyBlknNs2nXRwIhG904opCby3l+9Xaf/wuPvICBF0rc1ZCNBd3nKe9cd2mecVkQ=="
+    },
+    "@emotion/memoize": {
+      "version": "0.8.0",
+      "resolved": "https://registry.npmjs.org/@emotion/memoize/-/memoize-0.8.0.tgz",
+      "integrity": "sha512-G/YwXTkv7Den9mXDO7AhLWkE3q+I92B+VqAE+dYG4NGPaHZGvt3G8Q0p9vmE+sq7rTGphUbAvmQ9YpbfMQGGlA=="
+    },
+    "@emotion/react": {
+      "version": "11.10.5",
+      "resolved": "https://registry.npmjs.org/@emotion/react/-/react-11.10.5.tgz",
+      "integrity": "sha512-TZs6235tCJ/7iF6/rvTaOH4oxQg2gMAcdHemjwLKIjKz4rRuYe1HJ2TQJKnAcRAfOUDdU8XoDadCe1rl72iv8A==",
+      "requires": {
+        "@babel/runtime": "^7.18.3",
+        "@emotion/babel-plugin": "^11.10.5",
+        "@emotion/cache": "^11.10.5",
+        "@emotion/serialize": "^1.1.1",
+        "@emotion/use-insertion-effect-with-fallbacks": "^1.0.0",
+        "@emotion/utils": "^1.2.0",
+        "@emotion/weak-memoize": "^0.3.0",
+        "hoist-non-react-statics": "^3.3.1"
+      }
+    },
+    "@emotion/serialize": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/@emotion/serialize/-/serialize-1.1.1.tgz",
+      "integrity": "sha512-Zl/0LFggN7+L1liljxXdsVSVlg6E/Z/olVWpfxUTxOAmi8NU7YoeWeLfi1RmnB2TATHoaWwIBRoL+FvAJiTUQA==",
+      "requires": {
+        "@emotion/hash": "^0.9.0",
+        "@emotion/memoize": "^0.8.0",
+        "@emotion/unitless": "^0.8.0",
+        "@emotion/utils": "^1.2.0",
+        "csstype": "^3.0.2"
+      }
+    },
+    "@emotion/sheet": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/@emotion/sheet/-/sheet-1.2.1.tgz",
+      "integrity": "sha512-zxRBwl93sHMsOj4zs+OslQKg/uhF38MB+OMKoCrVuS0nyTkqnau+BM3WGEoOptg9Oz45T/aIGs1qbVAsEFo3nA=="
+    },
+    "@emotion/unitless": {
+      "version": "0.8.0",
+      "resolved": "https://registry.npmjs.org/@emotion/unitless/-/unitless-0.8.0.tgz",
+      "integrity": "sha512-VINS5vEYAscRl2ZUDiT3uMPlrFQupiKgHz5AA4bCH1miKBg4qtwkim1qPmJj/4WG6TreYMY111rEFsjupcOKHw=="
+    },
+    "@emotion/use-insertion-effect-with-fallbacks": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/@emotion/use-insertion-effect-with-fallbacks/-/use-insertion-effect-with-fallbacks-1.0.0.tgz",
+      "integrity": "sha512-1eEgUGmkaljiBnRMTdksDV1W4kUnmwgp7X9G8B++9GYwl1lUdqSndSriIrTJ0N7LQaoauY9JJ2yhiOYK5+NI4A==",
+      "requires": {}
+    },
+    "@emotion/utils": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/@emotion/utils/-/utils-1.2.0.tgz",
+      "integrity": "sha512-sn3WH53Kzpw8oQ5mgMmIzzyAaH2ZqFEbozVVBSYp538E06OSE6ytOp7pRAjNQR+Q/orwqdQYJSe2m3hCOeznkw=="
+    },
+    "@emotion/weak-memoize": {
+      "version": "0.3.0",
+      "resolved": "https://registry.npmjs.org/@emotion/weak-memoize/-/weak-memoize-0.3.0.tgz",
+      "integrity": "sha512-AHPmaAx+RYfZz0eYu6Gviiagpmiyw98ySSlQvCUhVGDRtDFe4DBS0x1bSjdF3gqUDYOczB+yYvBTtEylYSdRhg=="
+    },
     "@eslint/eslintrc": {
       "version": "1.4.1",
       "resolved": "https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-1.4.1.tgz",
@@ -19291,6 +19621,19 @@
         }
       }
     },
+    "@floating-ui/core": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/@floating-ui/core/-/core-1.2.0.tgz",
+      "integrity": "sha512-GHUXPEhMEmTpnpIfesFA2KAoMJPb1SPQw964tToQwt+BbGXdhqTCWT1rOb0VURGylsxsYxiGMnseJ3IlclVpVA=="
+    },
+    "@floating-ui/dom": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/@floating-ui/dom/-/dom-1.2.0.tgz",
+      "integrity": "sha512-QXzg57o1cjLz3cGETzKXjI3kx1xyS49DW9l7kV2jw2c8Yftd434t2hllX0sVGn2Q8MtcW/4pNm8bfE1/4n6mng==",
+      "requires": {
+        "@floating-ui/core": "^1.2.0"
+      }
+    },
     "@humanwhocodes/config-array": {
       "version": "0.11.8",
       "resolved": "https://registry.npmjs.org/@humanwhocodes/config-array/-/config-array-0.11.8.tgz",
@@ -20041,6 +20384,14 @@
       "resolved": "https://registry.npmjs.org/@rushstack/eslint-patch/-/eslint-patch-1.2.0.tgz",
       "integrity": "sha512-sXo/qW2/pAcmT43VoRKOJbDOfV3cYpq3szSVfIThQXNt+E4DfKj361vaAt3c88U5tPUxzEswam7GW48PJqtKAg=="
     },
+    "@samuelmeuli/font-manager": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/@samuelmeuli/font-manager/-/font-manager-1.4.0.tgz",
+      "integrity": "sha512-TaPoX4qA6ABrACiSI18lQOOKjvbLNrT+84UWfzwcguWQ4nT+sprOSRyt/RVXnt9fQp/wFQVC2NcHbzd+AkXffg==",
+      "requires": {
+        "@babel/runtime": "^7.7.4"
+      }
+    },
     "@sinclair/typebox": {
       "version": "0.24.51",
       "resolved": "https://registry.npmjs.org/@sinclair/typebox/-/typebox-0.24.51.tgz",
@@ -20755,9 +21106,9 @@
       "integrity": "sha512-EEhsLsD6UsDM1yFhAvy0Cjr6VwmpMWqFBCb9w07wVugF7w9nfajxLuVmngTIpgS6svCnm6Vaw+MZhoDCKnOfsw=="
     },
     "@types/react": {
-      "version": "18.0.26",
-      "resolved": "https://registry.npmjs.org/@types/react/-/react-18.0.26.tgz",
-      "integrity": "sha512-hCR3PJQsAIXyxhTNSiDFY//LhnMZWpNNr5etoCqx/iUfGc5gXWtQR2Phl908jVR6uPXacojQWTg4qRpkxTuGug==",
+      "version": "16.14.35",
+      "resolved": "https://registry.npmjs.org/@types/react/-/react-16.14.35.tgz",
+      "integrity": "sha512-NUEiwmSS1XXtmBcsm1NyRRPYjoZF2YTE89/5QiLt5mlGffYK9FQqOKuOLuXNrjPQV04oQgaZG+Yq02ZfHoFyyg==",
       "requires": {
         "@types/prop-types": "*",
         "@types/scheduler": "*",
@@ -23859,6 +24210,11 @@
         "pkg-dir": "^4.1.0"
       }
     },
+    "find-root": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/find-root/-/find-root-1.1.0.tgz",
+      "integrity": "sha512-NKfW6bec6GfKc0SGx1e07QZY9PE99u0Bft/0rzSD5k3sO/vwkVUpDUKVm5Gpp5Ue3YfShPFTX2070tDs5kB9Ng=="
+    },
     "find-up": {
       "version": "5.0.0",
       "resolved": "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz",
@@ -23887,6 +24243,14 @@
       "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.2.tgz",
       "integrity": "sha512-VQLG33o04KaQ8uYi2tVNbdrWp1QWxNNea+nmIB4EVM28v0hmP17z7aG1+wAkNzVq4KeXTq3221ye5qTJP91JwA=="
     },
+    "font-picker-react": {
+      "version": "3.5.2",
+      "resolved": "https://registry.npmjs.org/font-picker-react/-/font-picker-react-3.5.2.tgz",
+      "integrity": "sha512-0JkWIDf2hi6JwnvjIiacLDhO+Sl38RQ4mUGhCWN+Hvj95XalVZ0Aq5zJs/Ybend4uk2yI9rd1QhRRF9RnfHqIQ==",
+      "requires": {
+        "@samuelmeuli/font-manager": "^1.4.0"
+      }
+    },
     "for-each": {
       "version": "0.3.3",
       "resolved": "https://registry.npmjs.org/for-each/-/for-each-0.3.3.tgz",
@@ -26638,6 +27002,11 @@
         "fs-monkey": "^1.0.3"
       }
     },
+    "memoize-one": {
+      "version": "6.0.0",
+      "resolved": "https://registry.npmjs.org/memoize-one/-/memoize-one-6.0.0.tgz",
+      "integrity": "sha512-rkpe71W0N0c0Xz6QD0eJETuWAJGnJ9afsl1srmwPrI+yBCkge5EycXXbYRyvL29zZVUWQCY7InPRCv3GDXuZNw=="
+    },
     "merge-descriptors": {
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz",
@@ -28166,6 +28535,12 @@
         "warning": "^4.0.3"
       }
     },
+    "react-colorful": {
+      "version": "5.6.1",
+      "resolved": "https://registry.npmjs.org/react-colorful/-/react-colorful-5.6.1.tgz",
+      "integrity": "sha512-1exovf0uGTGyq5mXQT0zgQ80uvj2PCwvF8zY1RN9/vbJVSjSo3fsB/4L3ObbF7u70NduSiK4xu4Y6q1MHoUGEw==",
+      "requires": {}
+    },
     "react-dev-utils": {
       "version": "12.0.1",
       "resolved": "https://registry.npmjs.org/react-dev-utils/-/react-dev-utils-12.0.1.tgz",
@@ -28379,6 +28754,22 @@
         "workbox-webpack-plugin": "^6.4.1"
       }
     },
+    "react-select": {
+      "version": "5.7.0",
+      "resolved": "https://registry.npmjs.org/react-select/-/react-select-5.7.0.tgz",
+      "integrity": "sha512-lJGiMxCa3cqnUr2Jjtg9YHsaytiZqeNOKeibv6WF5zbK/fPegZ1hg3y/9P1RZVLhqBTs0PfqQLKuAACednYGhQ==",
+      "requires": {
+        "@babel/runtime": "^7.12.0",
+        "@emotion/cache": "^11.4.0",
+        "@emotion/react": "^11.8.1",
+        "@floating-ui/dom": "^1.0.1",
+        "@types/react-transition-group": "^4.4.0",
+        "memoize-one": "^6.0.0",
+        "prop-types": "^15.6.0",
+        "react-transition-group": "^4.3.0",
+        "use-isomorphic-layout-effect": "^1.1.2"
+      }
+    },
     "react-transition-group": {
       "version": "4.4.5",
       "resolved": "https://registry.npmjs.org/react-transition-group/-/react-transition-group-4.4.5.tgz",
@@ -29261,6 +29652,11 @@
         "postcss-selector-parser": "^6.0.4"
       }
     },
+    "stylis": {
+      "version": "4.1.3",
+      "resolved": "https://registry.npmjs.org/stylis/-/stylis-4.1.3.tgz",
+      "integrity": "sha512-GP6WDNWf+o403jrEp9c5jibKavrtLW+/qYGhFxFrG8maXhwTBI7gLLhiBb0o7uFccWN+EOS9aMO6cGHWAO07OA=="
+    },
     "supports-color": {
       "version": "5.5.0",
       "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
@@ -29777,6 +30173,12 @@
         "requires-port": "^1.0.0"
       }
     },
+    "use-isomorphic-layout-effect": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/use-isomorphic-layout-effect/-/use-isomorphic-layout-effect-1.1.2.tgz",
+      "integrity": "sha512-49L8yCO3iGT/ZF9QttjwLF/ZD9Iwto5LnH5LmEdk/6cFmXddqi2ulF0edxTwjj+7mqvpVVGQWvbXZdn32wRSHA==",
+      "requires": {}
+    },
     "use-sync-external-store": {
       "version": "1.2.0",
       "resolved": "https://registry.npmjs.org/use-sync-external-store/-/use-sync-external-store-1.2.0.tgz",
diff --git a/package.json b/package.json
index 0f876a9..127c8b6 100644
--- a/package.json
+++ b/package.json
@@ -12,15 +12,19 @@
     "cors": "^2.8.5",
     "express": "^4.18.2",
     "express-graphql": "^0.12.0",
+    "font-picker-react": "^3.5.2",
     "graphql": "^16.6.0",
     "nodemon": "^2.0.20",
     "react": "^18.2.0",
     "react-bootstrap": "^2.7.0",
+    "react-colorful": "^5.6.1",
     "react-dom": "^18.2.0",
     "react-icons": "^4.7.1",
     "react-redux": "^8.0.5",
     "react-router-dom": "^6.6.1",
     "react-scripts": "5.0.1",
+    "react-select": "^5.7.0",
+    "lodash": "^4.17.21",
     "redux": "^4.2.0",
     "sass": "^1.57.1",
     "web-vitals": "^2.1.4"
diff --git a/src/App.js b/src/App.js
index 4ff5d8d..3eaf204 100644
--- a/src/App.js
+++ b/src/App.js
@@ -1,5 +1,5 @@
 import './App.scss';
-import React from 'react';
+import React, { useEffect, useState } from 'react';
 import { Col, Container, Row } from 'react-bootstrap';
 import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
 import { configureStore } from '@reduxjs/toolkit';
@@ -12,36 +12,890 @@ import CouponsScreen from './components/home/view/coupons_screen';
 import rootReducer from './state/reducer';
 import Header from './components/header';
 import Footer from './components/footer';
-import SideBar from './components/sidebar';
+import SideBar from './components/sidebar/index.js';
 import ThanksScreen from './components/home/view/thanks';
+import DetailsScreen from './components/home/view/details';
+import _ from 'lodash';
 
 const store = configureStore({ reducer: rootReducer });
 
 const App = () => {
+
+  const dbValues = {
+    "message": "Retrieved successfully",
+    "widget": {
+      "id": 7,
+      "created_at": null,
+      "updated_at": null,
+      "admin_id": 1,
+      "title": "ServerAPI",
+      "description": "This is a test on server",
+      "is_active": 0,
+      "is_published": 0,
+      "initial_json": {
+        "identifier": "Widget",
+        "id": null,
+        "coverImage": "https://d1x34wjl7a82h9.cloudfront.net/1/widgetimages/1646978504171.jpeg",
+        "shareLink": "htttps://bit.ly/1223",
+        "wizard": {
+          "elements": {
+            "wizardBorder": {
+              "style": {
+                "borderColor": "#000000",
+                "borderRadius": "0em"
+              }
+            }
+          }
+        },
+        "welcomeScreen": {
+          "elements": {
+            "welcomeScreenHeading": {
+              "text": "Refer a friend",
+              "style": {
+                "fontWeight": "300",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "24px",
+                "color": "#545454",
+                "fontFamily": "Yesava One",
+              }
+            },
+            "welcomeScreenOfferHeading": {
+              "text": "We are launching [XX Product xx] on [xx Date xx].",
+              "style": {
+                "fontWeight": "600",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "35px",
+                "color": "#545454",
+                "fontFamily": "Yesava One"
+              }
+            },
+            "welcomeScreenOfferDetails": {
+              "text": "Please provide your email below and we'll email you to give you access to a promotion to share with your friends when it's available",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "18px",
+                "color": "#545454",
+                "fontFamily": "Yesava One"
+              }
+            },
+            "welcomeScreenEmail": {
+              "text": "Your email address",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "18px",
+                "color": "#545454",
+                "fontFamily": "Yesava One"
+              }
+            },
+            "welcomeScreenSubmitButton": {
+              "elemID": "welcomeScreenSubmitButton",
+              "style": {
+                "backgroundColor": "#5db0b9",
+                "borderColor": "none",
+                "border": "none",
+                "borderRadius": "0em"
+              }
+            },
+            "welcomeScreenSubmitButtonText": {
+              "elemID": "welcomeScreenSubmitButtonText",
+              "text": "Submit",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "18px",
+                "color": "#ffffff",
+                "fontFamily": "Yesava One"
+              }
+            }
+          }
+        },
+        "socialMediaScreen": {
+          "elements": {
+            "socialMediaScreenHeading": {
+              "text": "Refer a friend",
+              "style": {
+                "fontWeight": "300",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "24px",
+                "color": "#545454",
+                "fontFamily": "Yesava One",
+              }
+            },
+            "socialMediaScreenSubHeading": {
+              "text": "How would you like to share?",
+              "style": {
+                "fontWeight": "600",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "35px",
+                "color": "#545454",
+                "fontFamily": "Yesava One"
+              }
+            },
+            "socialMediaShareButton": {
+              "elemID": "socialMediaShareButton",
+              "style": {
+                "backgroundColor": "#5db0b9",
+                "borderColor": "none",
+                "border": "none",
+                "borderRadius": "0em"
+              }
+            },
+            "socialMediaShareButtonText": {
+              "elemID": "socialMediaShareButtonText",
+              "text": "Start Referring",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "18px",
+                "color": "#ffffff",
+                "fontFamily": "Yesava One"
+              }
+            }
+          }
+        },
+        "detailsScreen": {
+          "elements": {
+            "detailsScreenHeading": {
+              "text": "Refer a friend",
+              "style": {
+                "fontWeight": "300",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "24px",
+                "color": "#545454",
+                "fontFamily": "Yesava One",
+              }
+            },
+            "detailsScreenSubHeading": {
+              "text": "Please provide us your details..",
+              "style": {
+                "fontWeight": "600",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "35px",
+                "color": "#545454",
+                "fontFamily": "Yesava One"
+              }
+            },
+            "detailsScreenName": {
+              "text": "YOUR FIRST NAME",
+              "style": {
+                "fontWeight": "600",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "35px",
+                "color": "#545454",
+                "fontFamily": "Yesava One"
+              }
+            },
+            "detailsScreenEmail": {
+              "text": "YOUR EMAIL ADDRESS",
+              "style": {
+                "fontWeight": "600",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "35px",
+                "color": "#545454",
+                "fontFamily": "Yesava One"
+              }
+            },
+            "detailsScreenShareButton": {
+              "elemID": "detailsScreenShareButton",
+              "style": {
+                "backgroundColor": "#5db0b9",
+                "borderColor": "none",
+                "border": "none",
+                "borderRadius": "0em"
+              }
+            },
+            "detailsScreenShareButtonText": {
+              "elemID": "detailsScreenShareButtonText",
+              "text": "Next",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "18px",
+                "color": "#ffffff",
+                "fontFamily": "Yesava One"
+              }
+            }
+          }
+        },
+        "couponsScreen": {
+          "elements": {
+            "couponsScreenHeading": {
+              "text": "Refer a friend",
+              "style": {
+                "fontWeight": "300",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "24px",
+                "color": "#545454",
+                "fontFamily": "Yesava One",
+              }
+            },
+            "couponsScreenSubHeading": {
+              "text": "Look what we have got for you..",
+              "style": {
+                "fontWeight": "600",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "35px",
+                "color": "#545454",
+                "fontFamily": "Yesava One"
+              }
+            },
+            "couponsScreenOfferDetails": {
+              "text": "Don't like this offer? Click below for more coupons.",
+              "style": {
+                "fontWeight": "600",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "18px",
+                "color": "#545454",
+                "fontFamily": "Yesava One"
+              }
+            },
+            "couponsScreenShareButton": {
+              "elemID": "couponsScreenShareButton",
+              "style": {
+                "backgroundColor": "#5db0b9",
+                "borderColor": "none",
+                "border": "none",
+                "borderRadius": "0em"
+              }
+            },
+            "couponsScreenShareButtonText": {
+              "elemID": "couponsScreenShareButtonText",
+              "text": "Start Referring",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "18px",
+                "color": "#ffffff",
+                "fontFamily": "Yesava One"
+              }
+            }
+          }
+        },
+        "emailEditScreen": {
+          "elements": {
+            "emailEditHeading": {
+              "text": "Lucemio Home",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "24px",
+                "color": "#000000",
+                "fontFamily": "Arima Madurai"
+              }
+            },
+            "emailEditImage": {
+              "url": null
+            },
+            "emailEditMessage": {
+              "text": "Hello.You’ve been invited by a friend who thinks you’ll like Walmart InHome. We’ll let them take it from here.",
+              "style": {
+                "fontWeight": "bold",
+                "fontStyle": "italic",
+                "textDecoration": "underline",
+                "fontSize": "11px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            },
+            "emailEditCouponButton": {
+              "style": {
+                "backgroundColor": null,
+                "borderColor": "#000000",
+                "borderRadius": "1em"
+              }
+            },
+            "emailEditCouponUrl": {
+              "url": "https://lucemio.com"
+            },
+            "emailEditDescription": {
+              "text": "A note from your friend. Please check the coupon offer to fullfill your daily needs, groceries, etc",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "15px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            },
+            "emailEditLink": {
+              "text": "Get $20 Off!",
+              "style": {
+                "fontWeight": "bold",
+                "fontStyle": "italic",
+                "textDecoration": "underline",
+                "fontSize": "15px",
+                "color": "#d83434",
+                "fontFamily": "Open Sans"
+              }
+            }
+          }
+        },
+        "configureMsgScreen": {
+          "elements": {
+            "configureMsgScreenHeading": {
+              "text": "Get $X for every friend you refer",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "24px",
+                "color": "#000000",
+                "fontFamily": "BioRhyme"
+              }
+            },
+            "configureMsgScreenSubHeading": {
+              "text": "Your friends get $X and you get $X after their first purchase of $X+",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "18px",
+                "color": "#000000",
+                "fontFamily": "Bevan"
+              }
+            },
+            "configureMsgScreenEmailLabelText": {
+              "text": "Email",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "15px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            },
+            "configureMsgScreenFBLabelText": {
+              "text": "Facebook",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "15px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            },
+            "configureMsgScreenMsngrLabelText": {
+              "text": "Messenger",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "15px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            },
+            "configureMsgScreenEmailText": {
+              "text": "Hey, check out [COMPANY NAME]! I love their products and I think you will too. I’m giving you $X to spend. You can thank me later :)",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "15px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            },
+            "configureMsgScreenFBFirstText": {
+              "text": "Catchy call to action here",
+              "style": {
+                "fontWeight": "bold",
+                "fontStyle": "italic",
+                "textDecoration": "underline",
+                "fontSize": "15px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            },
+            "configureMsgScreenFBDescText": {
+              "text": "Describe what the friend gets. What\"s in it for them? Describe your product or service and what makes you unique. Give the friend a reason to click.",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "15px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            },
+            "configureMsgScreenMsngrText": {
+              "text": "You can add a personal message",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "15px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            },
+            "configureMsgScreenEmailButtonText": {
+              "text": "Send",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "15px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            },
+            "configureMsgScreenFBButtonText": {
+              "text": "Post",
+              "style": {
+                "fontWeight": "bold",
+                "fontStyle": "italic",
+                "textDecoration": "underline",
+                "fontSize": "15px",
+                "color": "#8f1818",
+                "fontFamily": "Open Sans"
+              }
+            },
+            "configureMsgScreenMsngrButtonText": {
+              "text": "Launch Messenger",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "15px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            },
+            "configureMsgScreen3daysReminderText": {
+              "text": "Send my friend a reminder in 3 days",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "15px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            },
+            "configureMsgScreenEmailSignUpText": {
+              "text": "Sign up for our emails",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "15px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            },
+            "configureMsgScreenShareText": {
+              "text": "And share your link wherever:",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "15px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            },
+            "configureMsgScreenEmailIcon": {
+              "style": {
+                "color": "#000000"
+              }
+            },
+            "configureMsgScreenFBIcon": {
+              "style": {
+                "color": "#000000"
+              }
+            },
+            "configureMsgScreenFBMsngrIcon": {
+              "style": {
+                "color": "#000000"
+              }
+            },
+            "configureMsgScreenEmailButton": {
+              "style": {
+                "backgroundColor": null,
+                "borderColor": "#000000",
+                "borderRadius": "0em"
+              }
+            },
+            "configureMsgScreenFBButton": {
+              "style": {
+                "backgroundColor": null,
+                "borderColor": "#000000",
+                "borderRadius": "0em"
+              }
+            },
+            "configureMsgScreenMsngrButton": {
+              "style": {
+                "backgroundColor": null
+              }
+            },
+            "configureMsgScreenEmailToText": {
+              "text": "To"
+            },
+            "configureMsgScreenEmailFromText": {
+              "text": "Email Address...."
+            },
+            "configureMsgScreenFbImage": {
+              "url": null
+            }
+          }
+        },
+        "thanksScreen": {
+          "elements": {
+            "thanksScreenHeading": {
+              "text": "Thanks for sharing friendbuy",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "24px",
+                "color": "#000000",
+                "fontFamily": "Zhi Mang Xing"
+              }
+            },
+            "thanksScreenSubHeading": {
+              "text": "Once your friend makes their first purchase you’ll find your $X reward in your inbox.        Don’t stop there! The more you share the more rewards you’ll get!",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "18px",
+                "color": "#000000",
+                "fontFamily": "Zen Loop"
+              }
+            },
+            "thanksScreenEmailLabelText": {
+              "text": "Email",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "15px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            },
+            "thanksScreenFBLabelText": {
+              "text": "Facebook",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "15px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            },
+            "thanksScreenMsngrLabelText": {
+              "text": "Messenger",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "15px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            },
+            "thanksScreenEmailButtonText": {
+              "text": "Share Again",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "15px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            },
+            "thanksScreenMsngrButton": {
+              "style": {
+                "backgroundColor": null,
+                "borderColor": "#000000",
+                "borderRadius": "0em"
+              }
+            },
+            "thanksScreenShareText": {
+              "text": "And share your link wherever:",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "15px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            }
+          }
+        },
+        "redemptionPageSuccess": {
+          "elements": {
+            "redemptionPageHeading": {
+              "text": "Thank You!",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "24px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            },
+            "redemptionPageSubHeading": {
+              "text": "Here\"s your $10 towards your first purchase on Walmart pickup & delivery. Please copy and use the following code at checkout:",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "18px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            },
+            "redemptionPageSaveBtnText": {
+              "text": "Shop Now",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "15px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            },
+            "redemptionPageSaveBtn": {
+              "style": {
+                "backgroundColor": null
+              }
+            },
+            "redemptionPageBottomText": {
+              "text": "*Valid only for first order with Walmart pickup & delivery via Walmart.com grocery. Minimum order of $50. Does not apply to alcohol purchases. Customer responsible for all applicable taxes. Offer subject to change or expire without notice.",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "15px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            }
+          }
+        },
+        "redemptionPage": {
+          "elements": {
+            "redemptionPageHeading": {
+              "text": "Welcome to Walmart Pickup & delivery",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "24px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            },
+            "redemptionPageSubHeading": {
+              "text": "Enter your email address to receive $10 off your first purchase:",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "18px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            },
+            "redemptionPageInputText": {
+              "text": "Enter Email..."
+            },
+            "redemptionPageFirstName": {
+              "text": "Enter First Name"
+            },
+            "redemptionPageLastName": {
+              "text": "Enter Last Name"
+            },
+            "redemptionPageScreen3daysReminderText": {
+              "text": "Send my friend a reminder in 3 days",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "15px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            },
+            "redemptionPage3daysReminderText": {
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "15px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            },
+            "redemptionPageSaveBtnText": {
+              "text": "Save 10$ Now",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "15px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            },
+            "redemptionPageCodeBtnText": {
+              "text": "Copy",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "15px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            },
+            "redemptionPageSaveBtn": {
+              "style": {
+                "backgroundColor": null
+              }
+            },
+            "redemptionPageBottomText": {
+              "text": "*Valid only for first order with Walmart pickup & delivery via Walmart.comgrocery. Minimum order of $50. Does not apply to alcohol purchases. Customer responsible for all applicable taxes. Offer subject to change or expire without notice.",
+              "style": {
+                "fontWeight": "500",
+                "fontStyle": "normal",
+                "textDecoration": "none",
+                "fontSize": "15px",
+                "color": "#000000",
+                "fontFamily": "Open Sans"
+              }
+            }
+          }
+        },
+        "roundCont": true,
+        "contColor": "#1cd940"
+      },
+      "edited_json": "{\"identifier\":\"Widget\",\"id\":null,\"campaignUrl\":\"http:\\\/\\\/www.lucemio.com\\\/\",\"coverImage\":\"https:\\\/\\\/d1x34wjl7a82h9.cloudfront.net\\\/1\\\/widgetimages\\\/1646978504171.jpeg\",\"shareLink\":\"htttps:\\\/\\\/bit.ly\\\/1223\",\"wizard\":{\"elements\":{\"wizardBorder\":{\"style\":{\"borderColor\":\"#000000\",\"borderRadius\":\"0em\"}}}},\"landingScreen\":{\"elements\":{\"landingScreenHeading\":{\"text\":\"Send a Lucemio gift card\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"24px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"landingRecipientText\":{\"text\":\"Recipient's Name\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"18px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"landingSenderText\":{\"text\":\"Your Name\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"18px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"landingScreenShareButton\":{\"style\":{\"backgroundColor\":\"#ffffff\",\"borderColor\":\"#000000\",\"borderRadius\":\"0em\",\"borderWidth\":\"initial\"}},\"landingScreenShareButtonText\":{\"text\":\"Continue\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}}}},\"designScreen\":{\"elements\":{\"designScreenHeading\":{\"text\":\"Pick a design\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"24px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"designScreenSubheading\":{\"text\":\"Recipient's Name\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"18px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"designRecipientText\":{\"text\":\"Enter Recipient's Email\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"18px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"designScreenShareButton\":{\"style\":{\"backgroundColor\":\"#ffffff\",\"borderColor\":\"#000000\",\"borderRadius\":\"0em\",\"borderWidth\":\"initial\"}},\"designScreenShareButtonText\":{\"text\":\"Continue\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}}}},\"amountScreen\":{\"elements\":{\"amountScreenHeading\":{\"text\":\"How much would you like to give?\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"24px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"amountScreenAmountText\":{\"text\":null,\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"18px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"amountScreenRecipientText\":{\"text\":\"Enter recipient's mail\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"18px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"amountScreenShareButton\":{\"style\":{\"backgroundColor\":\"#ffffff\",\"borderColor\":\"#000000\",\"borderRadius\":\"0em\",\"borderWidth\":\"initial\"}},\"amountScreenShareButtonText\":{\"text\":\"Continue\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}}}},\"reviewScreen\":{\"elements\":{\"reviewScreenHeading\":{\"text\":\"Review your cart\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"24px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"reviewScreenSubHeading\":{\"text\":\"Digital gift cards\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"24px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"reviewScreenAmountText\":{\"text\":null,\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"18px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"reviewScreenShareButton\":{\"style\":{\"backgroundColor\":\"#ffffff\",\"borderColor\":\"#000000\",\"borderRadius\":\"0em\",\"borderWidth\":\"initial\"}},\"reviewScreenShareButtonText\":{\"text\":\"Continue\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}}}},\"thnaksCouponScreen\":{\"elements\":{\"thnaksCouponScreenHeading\":{\"text\":\"Thanks!\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"italic\",\"textDecoration\":\"underline\",\"fontSize\":\"24px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}}}},\"welcomeScreen\":{\"elements\":{\"welcomeScreenHeading\":{\"text\":\"Get $X for every friend you refer\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"24px\",\"color\":\"#010101\",\"fontFamily\":\"Open Sans\"}},\"welcomeScreenSubHeading\":{\"text\":\"Your friends get $X and you get $X after their first purchase of $X+\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"18px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"welcomeScreenEmailText\":{\"text\":\"Enter your email to start sharing with friends:\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"18px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"welcomeScreenInputText\":{\"text\":\"Enter Email...\"},\"welcomeScreenShareButton\":{\"style\":{\"backgroundColor\":\"#ffffff\",\"borderColor\":\"#000000\",\"borderRadius\":\"0em\",\"borderWidth\":\"initial\"}},\"welcomeScreenShareButtonText\":{\"text\":\"Start Sharing\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}}}},\"emailEditScreen\":{\"elements\":{\"emailEditHeading\":{\"text\":\"Lucemio Home\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"24px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"emailEditImage\":{\"url\":null},\"emailEditMessage\":{\"text\":\"Hello.You\\u2019ve been invited by a friend who thinks you\\u2019ll like Walmart InHome. We\\u2019ll let them take it from here.\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"11px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"emailEditCouponButton\":{\"style\":{\"backgroundColor\":\"#ffffff\",\"borderColor\":\"#000000\",\"borderRadius\":\"0em\",\"borderWidth\":\"initial\"}},\"emailEditCouponUrl\":{\"url\":\"https:\\\/\\\/lucemio.com\"},\"emailEditDescription\":{\"text\":\"A note from your friend. Please check the coupon offer to fullfill your daily needs, groceries, etc\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"emailEditLink\":{\"text\":\"Get $20 Off!\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#d83434\",\"fontFamily\":\"Open Sans\"}}}},\"configureMsgScreen\":{\"elements\":{\"configureMsgScreenHeading\":{\"text\":\"Get $X for every friend you refer\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"24px\",\"color\":\"#000000\",\"fontFamily\":\"BioRhyme\"}},\"configureMsgScreenSubHeading\":{\"text\":\"Your friends get $X and you get $X after their first purchase of $X+\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"18px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"configureMsgScreenEmailLabelText\":{\"text\":\"Email\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"configureMsgScreenFBLabelText\":{\"text\":\"Facebook\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"configureMsgScreenMsngrLabelText\":{\"text\":\"Messenger\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"configureMsgScreenEmailText\":{\"text\":\"Hey, check out [COMPANY NAME]! I love their products and I think you will too. I\\u2019m giving you $X to spend. You can thank me later :)\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"configureMsgScreenFBFirstText\":{\"text\":\"Catchy call to action here\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"configureMsgScreenFBDescText\":{\"text\":\"Describe what the friend gets. What\\\"s in it for them? Describe your product or service and what makes you unique. Give the friend a reason to click.\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"configureMsgScreenMsngrText\":{\"text\":\"You can add a personal message\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"configureMsgScreenEmailButtonText\":{\"text\":\"Send\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"configureMsgScreenFBButtonText\":{\"text\":\"Post\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#8f1818\",\"fontFamily\":\"Open Sans\"}},\"configureMsgScreenMsngrButtonText\":{\"text\":\"Launch Messenger\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"configureMsgScreen3daysReminderText\":{\"text\":\"Send my friend a reminder in 3 days\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"configureMsgScreenEmailSignUpText\":{\"text\":\"Sign up for our emails\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"configureMsgScreenShareText\":{\"text\":\"And share your link wherever:\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"configureMsgScreenEmailIcon\":{\"style\":{\"color\":\"#000000\"}},\"configureMsgScreenFBIcon\":{\"style\":{\"color\":\"#000000\"}},\"configureMsgScreenFBMsngrIcon\":{\"style\":{\"color\":\"#000000\"}},\"configureMsgScreenEmailButton\":{\"style\":{\"backgroundColor\":\"#ffffff\",\"borderColor\":\"#000000\",\"borderRadius\":\"0em\",\"borderWidth\":\"initial\"}},\"configureMsgScreenFBButton\":{\"style\":{\"backgroundColor\":\"#ffffff\",\"borderColor\":\"#000000\",\"borderRadius\":\"0em\",\"borderWidth\":\"initial\"}},\"configureMsgScreenMsngrButton\":{\"style\":{\"backgroundColor\":\"#ffffff\"}},\"configureMsgScreenEmailToText\":{\"text\":\"To\"},\"configureMsgScreenEmailFromText\":{\"text\":\"Email Address....\"},\"configureMsgScreenFbImage\":{\"url\":null}}},\"thanksScreen\":{\"elements\":{\"thanksScreenHeading\":{\"text\":\"Thanks for sharing friendbuy\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"24px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"thanksScreenSubHeading\":{\"text\":\"Once your friend makes their first purchase you\\u2019ll find your $X reward in your inbox.        Don\\u2019t stop there! The more you share the more rewards you\\u2019ll get!\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"18px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"thanksScreenEmailLabelText\":{\"text\":\"Email\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"thanksScreenFBLabelText\":{\"text\":\"Facebook\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"thanksScreenMsngrLabelText\":{\"text\":\"Messenger\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"thanksScreenEmailButtonText\":{\"text\":\"Share Again\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"thanksScreenMsngrButton\":{\"style\":{\"backgroundColor\":\"#ffffff\",\"borderColor\":\"#000000\",\"borderRadius\":\"0em\",\"borderWidth\":\"initial\"}},\"thanksScreenShareText\":{\"text\":\"And share your link wherever:\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}}}},\"redemptionPageSuccess\":{\"elements\":{\"redemptionPageHeading\":{\"text\":\"Thank You!\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"24px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"redemptionPageSubHeading\":{\"text\":\"Here\\\"s your $10 towards your first purchase on Walmart pickup & delivery. Please copy and use the following code at checkout:\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"18px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"redemptionPageSaveBtnText\":{\"text\":\"Shop Now\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"redemptionPageSaveBtn\":{\"style\":{\"backgroundColor\":\"#ffffff\",\"borderColor\":\"#000000\",\"borderRadius\":\"0em\",\"borderWidth\":\"initial\"}},\"redemptionPageCopyBtnText\":{\"text\":\"Copy\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"redemptionPageCopyBtn\":{\"style\":{\"backgroundColor\":\"#ffffff\",\"borderColor\":\"#000000\",\"borderRadius\":\"0em\",\"borderWidth\":\"initial\"}},\"redemptionPageBottomText\":{\"text\":\"*Valid only for first order with Walmart pickup & delivery via Walmart.com grocery. Minimum order of $50. Does not apply to alcohol purchases. Customer responsible for all applicable taxes. Offer subject to change or expire without notice.\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}}}},\"redemptionPage\":{\"elements\":{\"redemptionPageHeading\":{\"text\":\"Welcome to Walmart Pickup & delivery\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"24px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"redemptionPageSubHeading\":{\"text\":\"Enter your email address to receive $10 off your first purchase:\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"18px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"redemptionPageInputText\":{\"text\":\"Enter Email...\"},\"redemptionPageFirstName\":{\"text\":\"Enter First Name\"},\"redemptionPageLastName\":{\"text\":\"Enter Last Name\"},\"redemptionPageCouponBtnText\":{\"text\":\"Get Coupon\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}},\"redemptionPageCouponBtn\":{\"style\":{\"backgroundColor\":\"#ffffff\",\"borderColor\":\"#000000\",\"borderRadius\":\"0em\",\"borderWidth\":\"initial\"}},\"redemptionPageBottomText\":{\"text\":\"*Valid only for first order with Walmart pickup & delivery via Walmart.comgrocery. Minimum order of $50. Does not apply to alcohol purchases. Customer responsible for all applicable taxes. Offer subject to change or expire without notice.\",\"style\":{\"fontWeight\":\"500\",\"fontStyle\":\"normal\",\"textDecoration\":\"none\",\"fontSize\":\"15px\",\"color\":\"#000000\",\"fontFamily\":\"Open Sans\"}}}},\"roundCont\":true,\"contColor\":\"#1cd940\"}",
+      "widget_type": "popup",
+      "element_id": "somedivtag",
+      "coupons": []
+    }
+  };
+  const [dbObject, setDbObject] = useState(null);
+  const [selectedElement, setSelectedElement] = useState();
+  const [temp, setTemp]= useState();
+  const child = React.useRef();
+
+  useEffect(() => {
+    fetchData();
+  }, []);
+
+
+  const getData = async () => {
+    return await dbValues;
+  };
+
+
+  const fetchData = async () => {
+    try {
+      const result = await getData();
+      setDbObject(result.widget.initial_json);
+    } catch (err) { }
+  };
+
+  const elementClicked = (element) => {
+    const elem = _.cloneDeep(element);
+    setSelectedElement(elem);
+  }
+
+  const updateValue = (response) => {
+    if(!response.id) {
+      return;
+    }
+    const copyObj = _.cloneDeep(dbObject);
+    switch (response.selector) {
+      case 'style':
+        copyObj[response.screen].elements[response.id].style[response.param] =
+          response.val;
+        break;
+      case 'text':
+        copyObj[response.screen].elements[response.id].text = response.val;
+        break;
+      case 'icon':
+        copyObj[response.screen].elements[response.id].style[response.param] = response.val;
+        break;
+      case 'cont':
+        copyObj.roundCont = response.val;
+        break;
+      case 'contColor':
+        copyObj.contColor = response.val;
+        break;
+      default:
+        return;
+    }
+    setDbObject(copyObj);
+  }
+
+  // useEffect(() => {
+  //   // debugger;
+  // }, [selectedElement]);
+
   return (
-    <Provider store={store}>
-      <Container fluid>
-        <Router>
-          <Header></Header>
-          <Row>
-            <Col md={10} >
-              <Routes>  
-                <Route path='/' element={<Home />}>
-                  <Route path="/" element={<WelcomeScreen />}></Route>
-                  <Route path="/social" element={<SocialMediaSharing />}></Route>
-                  <Route path="/coupons" element={<CouponsScreen />}></Route>
-                  <Route path="/thanks" element={<ThanksScreen />}></Route>
-                </Route>
-              </Routes>
-            </Col>
-            <Col md={2}>
-              <SideBar></SideBar>
-            </Col>
-          </Row>
-          <Footer></Footer>
-        </Router>
-      </Container>
-    </Provider>
+    <div> {dbObject &&
+      <Provider store={store}>
+        <Container fluid>
+          <Router>
+            <Header></Header>
+            <Row>
+              <Col md={10} >
+                <Routes>
+                  <Route path='/' element={<Home />}>
+                    <Route path="/" element={<WelcomeScreen dbObject={dbObject} elementClicked={elementClicked}
+                      updateValue={updateValue} />}></Route>
+                    <Route path="/social" element={<SocialMediaSharing dbObject={dbObject} elementClicked={elementClicked}
+                      updateValue={updateValue} />}></Route>
+                    <Route path="/details" element={<DetailsScreen dbObject={dbObject} elementClicked={elementClicked}
+                      updateValue={updateValue} />}></Route>
+                    <Route path="/coupons" element={<CouponsScreen dbObject={dbObject} elementClicked={elementClicked}
+                      updateValue={updateValue} />}></Route>
+                    <Route path="/thanks" element={<ThanksScreen dbObject={dbObject} />}></Route>
+                  </Route>
+                </Routes>
+              </Col>
+              <Col md={2}>
+                <SideBar dbObject={dbObject} selectedElement={selectedElement} updateValue={updateValue}></SideBar>
+              </Col>
+            </Row>
+            <Footer></Footer>
+          </Router>
+        </Container>
+      </Provider>}</div>
   );
 }
 
diff --git a/src/App.scss b/src/App.scss
index f7f4644..9a6b8fd 100644
--- a/src/App.scss
+++ b/src/App.scss
@@ -31,3 +31,17 @@
 .col{
   padding: 0;
 }
+
+.image-widget-container, .content-widget-container {
+  min-height: 50% !important;
+  max-height: 50% !important;
+  // height: 50% !important;
+}
+
+.image-widget-container {
+  padding-right: unset;
+}
+
+.content-widget-container {
+  padding-left: unset;
+}
diff --git a/src/components/header/index.js b/src/components/header/index.js
index d9bc231..48706f2 100644
--- a/src/components/header/index.js
+++ b/src/components/header/index.js
@@ -7,10 +7,13 @@ const headerData = [{
     redirect: '/'
 },{
     name: 'Details',
-    redirect: '/coupons'
+    redirect: '/details'
 },{
     name: 'Share',
     redirect: '/social'
+},{
+    name: 'Coupons',
+    redirect: '/coupons'
 },{
     name: 'Thanks',
     redirect: '/thanks'
diff --git a/src/components/home/index.js b/src/components/home/index.js
index 8a04e9b..bfa5ae7 100644
--- a/src/components/home/index.js
+++ b/src/components/home/index.js
@@ -1,19 +1,34 @@
-import React from 'react';
+import React, { useEffect } from 'react';
 import './home.scss';
 import RightPanel from './right-panel';
 import { Row, Col, Image } from 'react-bootstrap';
 
 const Home = () => {
-    return(
+    useEffect(() => {
+        setImage();
+    }, []);
+
+    const setImage = () => {
+        // const imageContainer = document.querySelector('.image-widget-container');
+        // if (imageContainer) {
+        //     imageContainer.style.backgroundImage =  "url('https://www.mindinventory.com/blog/wp-content/uploads/2018/07/reactjs-gained.jpg') no-repeat center center fixed";
+        // }
+    }
+
+    const imagePath = 'https://www.mindinventory.com/blog/wp-content/uploads/2018/07/reactjs-gained.jpg';
+    return (
         <React.Fragment>
             <Row className='logo'>
                 <h1>LOGO</h1>
             </Row>
             <Row>
-                <Col xs={12} md={6}>
-                    <Image className='home-img' src='https://www.mindinventory.com/blog/wp-content/uploads/2018/07/reactjs-gained.jpg' />
+                <Col xs={12} md={6} className="image-widget-container" style={{
+                    "backgroundImage": `url('${imagePath}')`,
+                    "backgroundSize": 'cover', "backgroundPosition": 'center', "backgroundRepeat": 'no-repeat'
+                }}>
+                    {/* <Image className='home-img' src='https://www.mindinventory.com/blog/wp-content/uploads/2018/07/reactjs-gained.jpg' /> */}
                 </Col>
-                <Col xs={12} md={6}>
+                <Col xs={12} md={6} className="content-widget-container">
                     <RightPanel />
                 </Col>
             </Row>
diff --git a/src/components/home/view/coupons_screen.js b/src/components/home/view/coupons_screen.js
index 9690446..7dda392 100644
--- a/src/components/home/view/coupons_screen.js
+++ b/src/components/home/view/coupons_screen.js
@@ -22,7 +22,7 @@ const ContentFormat = (content) => (
     ))
 );
 
-const accordionData =[{
+const accordionData = [{
     title: 'Get 10% OFF for a referal',
     discription: 'Get 10% off after you spend $40. Your freind gets $10 off after they spend $40',
     toggleText: 'Coupon Details',
@@ -39,16 +39,30 @@ const accordionData =[{
     discription: 'Get 10% off after you spend $40. Your freind gets $10 off after they spend $40',
     toggleText: 'Coupon Details',
     content: ContentFormat(accordionContent)
-}]
+}];
+
+const CouponsScreen = (props) => {
+    const screenDetails = props?.dbObject?.couponsScreen?.elements;
+    const buttonData = () => {
+        return { buttonData: screenDetails.couponsScreenShareButton, buttonTextData: screenDetails.couponsScreenShareButtonText };
+    }
+    const contentClicked = (elementName, elementType) => {
+        props.elementClicked({ elementName: elementName, elementType: elementType, screen: 'welcomeScreen' });
+    }
 
-const CouponsScreen = () => {
-    return(
+    return (
         <React.Fragment>
-            <ViewHeader title='Refer a friend' />
-            <ViewTitle className='view-title' title="Look what we've got for you..." />
+            <ViewHeader title={screenDetails.couponsScreenHeading.text} field="couponsScreenHeading"
+                style={screenDetails.couponsScreenHeading.style} click={contentClicked} />
+            <ViewTitle className='view-title hover-edit' contentEditable='true' suppressContentEditableWarning="true"
+                title={screenDetails.couponsScreenSubHeading.text} style={screenDetails.couponsScreenSubHeading.style}
+                onClick={() => contentClicked('couponsScreenSubHeading', 'text')} />
             <AppAccordion data={accordionData} />
-            <p>Don't like this offer? Click below for more coupons.</p>
-            <AppButton>Start referring</AppButton>
+            <p className='hover-edit' style={screenDetails.couponsScreenOfferDetails.style}
+                onClick={() => contentClicked('couponsScreenOfferDetails', 'text')}
+                contentEditable='true' suppressContentEditableWarning="true">{screenDetails.couponsScreenOfferDetails.text}
+            </p>
+            <AppButton data={buttonData()} elemClicked={contentClicked}>{screenDetails.couponsScreenShareButtonText.text}</AppButton>
         </React.Fragment>
     )
 }
diff --git a/src/components/home/view/details.js b/src/components/home/view/details.js
new file mode 100644
index 0000000..2106bdd
--- /dev/null
+++ b/src/components/home/view/details.js
@@ -0,0 +1,64 @@
+import React, { useState } from 'react';
+import '../../shared/shared.scss';
+
+import ViewHeader from '../../shared/view_header';
+import ViewTitle from '../../shared/view_title';
+import InputText from '../../shared/input_text';
+import AppButton from '../../shared/app_btn';
+
+const DetailsScreen = (props) => {
+    const screenDetails = props?.dbObject?.detailsScreen?.elements;
+    const [selectedElement, setSelectedElement] = useState({});
+
+    const contentClicked = (elementName, elementType) => {
+        props.elementClicked({ elementName: elementName, elementType: elementType, screen: 'detailsScreen' });
+    }
+
+    const buttonData = () => {
+        return { buttonData: screenDetails.detailsScreenShareButton, buttonTextData: screenDetails.detailsScreenShareButtonText };
+    }
+
+    const populatePlaceholderStyling = () => {
+        var styles = `
+        #detailsScreenName::placeholder { 
+            font-weight: ${screenDetails.detailsScreenName.fontWeight};
+            font-style: ${screenDetails.detailsScreenName.fontStyle};
+            text-decoration: ${screenDetails.detailsScreenName.textDecoration};
+            font-size: ${screenDetails.detailsScreenName.fontSize};
+            color: ${screenDetails.detailsScreenName.color};
+            font-family: ${screenDetails.detailsScreenName.fontFamily};
+        }
+        #detailsScreenEmail::placeholder { 
+            font-weight: ${screenDetails.detailsScreenEmail.fontWeight};
+            font-style: ${screenDetails.detailsScreenEmail.fontStyle};
+            text-decoration: ${screenDetails.detailsScreenEmail.textDecoration};
+            font-size: ${screenDetails.detailsScreenEmail.fontSize};
+            color: ${screenDetails.detailsScreenEmail.color};
+            font-family: ${screenDetails.detailsScreenEmail.fontFamily};
+        }`;
+        const styleSheet = document.querySelector("#detailsScreenName");
+        if (styleSheet) {
+            styleSheet.innerText = styles;
+            document.head.appendChild(styleSheet);
+        }
+    }
+
+    populatePlaceholderStyling();
+
+
+    return (
+        <React.Fragment>
+            <ViewHeader title={screenDetails.detailsScreenHeading.text} style={screenDetails.detailsScreenHeading.style}
+                field="detailsScreenHeading" click={contentClicked} />
+            <ViewTitle className='view-secondary-title hover-edit' contentEditable='true'
+                onClick={() => contentClicked('detailsScreenSubHeading', 'text')}
+                suppressContentEditableWarning="true" title={screenDetails.detailsScreenSubHeading.text}
+                style={screenDetails.detailsScreenSubHeading.style} />
+            <InputText id="#detailsScreenInput" placeholder={screenDetails.detailsScreenName.text} readOnly />
+            <InputText id="#detailsScreenEmail" placeholder={screenDetails.detailsScreenEmail.text} readOnly />
+            <AppButton data={buttonData()} elemClicked={contentClicked}>{screenDetails.detailsScreenShareButtonText.text}</AppButton>
+        </React.Fragment>
+    )
+}
+
+export default DetailsScreen;
\ No newline at end of file
diff --git a/src/components/home/view/social_media.js b/src/components/home/view/social_media.js
index 12ab665..8ffe6be 100644
--- a/src/components/home/view/social_media.js
+++ b/src/components/home/view/social_media.js
@@ -9,17 +9,48 @@ const iconsToRender = [
     'whatsapp',
     'gmail',
     'messenger',
-    'twitter',
     'twitter'
 ];
 
-const SocialMediaSharing = () => {
-    return(
+const SocialMediaSharing = (props) => {
+    const screenDetails = { ...props?.dbObject?.socialMediaScreen?.elements };
+    const contentClicked = (elementName, elementType) => {
+        props.elementClicked({ elementName: elementName, elementType: elementType, screen: 'socialMediaScreen' });
+    }
+    const buttonData = () => {
+        return { buttonData: screenDetails.socialMediaShareButton, buttonTextData: screenDetails.socialMediaShareButtonText };
+    }
+    const iconClick = (event, icon) => {
+        const prevSelectedIcon = document.querySelector('.icon-selected');
+        if (prevSelectedIcon) {
+            prevSelectedIcon.classList.remove('icon-selected');
+        }
+        event.target.classList.add('icon-selected');
+        switch (icon) {
+            case 'facebook':
+                screenDetails.socialMediaShareButtonText.text = 'Post on Facebook';
+                break;
+            case 'whatsapp':
+                break;
+            case 'gmail':
+                break;
+            case 'messenger':
+                break;
+            case 'twitter':
+                break;
+        }
+    }
+
+    return (
         <React.Fragment>
-            <ViewHeader title='Refer a friend' />
-            <ViewTitle className='view-title' title='How would you like to share ?' />
-            <GroupIcon iconData={iconsToRender} rows={3} columns={2}></GroupIcon>
-            <AppButton>Start refering</AppButton>
+            <ViewHeader title={screenDetails.socialMediaScreenHeading.text}
+                style={screenDetails.socialMediaScreenHeading.style} field="socialMediaScreenHeading" click={contentClicked} />
+            <ViewTitle contentEditable='true' suppressContentEditableWarning="true" className='view-title hover-edit'
+                title={screenDetails.socialMediaScreenSubHeading.text}
+                style={screenDetails.socialMediaScreenSubHeading.style}
+                onClick={() => contentClicked('socialMediaScreenSubHeading', 'text')} />
+            <GroupIcon iconData={iconsToRender} rows={3} columns={2} iconClicked={iconClick}></GroupIcon>
+            <AppButton data={buttonData()} elemClicked={contentClicked}>{screenDetails.socialMediaShareButtonText.text}</AppButton>
         </React.Fragment>
     )
 }
diff --git a/src/components/home/view/welcome.js b/src/components/home/view/welcome.js
index 7aa634a..8611802 100644
--- a/src/components/home/view/welcome.js
+++ b/src/components/home/view/welcome.js
@@ -1,28 +1,39 @@
-import React from 'react';
-import { useDispatch } from 'react-redux';
+import React, { useEffect, useState } from 'react';
+import { useDispatch, } from 'react-redux';
+import '../../shared/shared.scss';
 
 import ViewHeader from '../../shared/view_header';
 import ViewTitle from '../../shared/view_title';
 import InputText from '../../shared/input_text';
 import AppButton from '../../shared/app_btn';
 
-const WelcomeScreen = () => {
-    const emailDispatch = useDispatch();
+const WelcomeScreen = (props) => {
+    const screenDetails = props?.dbObject?.welcomeScreen?.elements;
+    const [selectedElement, setSelectedElement] = useState({});
 
-    const handleInputChange = (event) => {
-        emailDispatch({
-            type: 'UPDATE_EMAIL',
-            payload: event.target.value
-        })
+    const contentClicked = (elementName, elementType) => {
+        props.elementClicked({ elementName: elementName, elementType: elementType, screen: 'welcomeScreen' });
     }
 
-    return(
+    const buttonData = () => {
+        return { buttonData: screenDetails.welcomeScreenSubmitButton, buttonTextData: screenDetails.welcomeScreenSubmitButtonText };
+    }
+
+
+    return (
         <React.Fragment>
-            <ViewHeader title='Refer a friend' />
-            <ViewTitle className='view-secondary-title' title='We are launching [XX Product xx] on [xx Date xx].' />
-            <p>Please provide your email below and we'll email you to give you access to a promotion t share with your friends when it's available</p>
-            <InputText placeholder='Your email address' onChange={(e) => handleInputChange(e)} />
-            <AppButton>Submit</AppButton>
+            <ViewHeader title={screenDetails.welcomeScreenHeading.text} style={screenDetails.welcomeScreenHeading.style}
+                field="welcomeScreenHeading" click={contentClicked} />
+            <ViewTitle className='view-secondary-title hover-edit' contentEditable='true'
+                onClick={() => contentClicked('welcomeScreenOfferHeading', 'text')}
+                suppressContentEditableWarning="true" title={screenDetails.welcomeScreenOfferHeading.text}
+                style={screenDetails.welcomeScreenOfferHeading.style} />
+            <p className="hover-edit" contentEditable='true' onClick={() => contentClicked('welcomeScreenOfferDetails', 'text')}
+                suppressContentEditableWarning="true" style={screenDetails.welcomeScreenOfferDetails.style}>
+                {screenDetails.welcomeScreenOfferDetails.text}
+            </p>
+            <InputText placeholder={screenDetails.welcomeScreenEmail.text} readOnly />
+            <AppButton data={buttonData()} elemClicked={contentClicked}>{screenDetails.welcomeScreenSubmitButtonText.text}</AppButton>
         </React.Fragment>
     )
 }
diff --git a/src/components/shared/app_btn.js b/src/components/shared/app_btn.js
index 5aa6f87..7f096aa 100644
--- a/src/components/shared/app_btn.js
+++ b/src/components/shared/app_btn.js
@@ -1,10 +1,15 @@
 import './shared.scss';
 import React from 'react';
+import Util from './util';
 
 const AppButton = (props) => {
-    return(
-        <button className='app-btn' {...props} >
-            {props.children}
+    return (
+        <button style={props.data.buttonData.style} contentEditable='true'
+            suppressContentEditableWarning="true" onClick={() => { props.elemClicked(props.data.buttonData.elemID, 'button'); }}
+            onKeyDown={(event) => { Util.blockEdit(event) }} className='app-btn hover-edit'>
+            <span style={props.data.buttonTextData.style} contentEditable='true'
+                onClick={(event) => { props.elemClicked(props.data.buttonTextData.elemID, 'text'); Util.blockPropagation(event); }}
+                suppressContentEditableWarning="true" className='hover-edit'>{props.children}</span>
         </button>
     )
 }
diff --git a/src/components/shared/font-upload-modal.js b/src/components/shared/font-upload-modal.js
new file mode 100644
index 0000000..f633c1a
--- /dev/null
+++ b/src/components/shared/font-upload-modal.js
@@ -0,0 +1,65 @@
+import React, { useState, useEffect } from 'react';
+import { UploadFont } from "./upload-fonts"
+
+const UploadFontModal = (props) => {
+
+    const [hiddenClass, setHideClass] = useState(!props.isHidden ? 'd-block' : 'd-none');
+    const [isFormValid, setFormValid] = useState(false);
+    const [filedata, setfileData] = useState({
+        fontFamily: '',
+        file: null
+    });
+
+    const handleClose = () => {
+        setHideClass('d-none');
+        props.onHandleClose();
+    }
+
+    const handleSave = () => {
+        handleClose();
+        props.onHandleSave(filedata);
+    }
+
+    useEffect(() => {
+        setHideClass(!props.isHidden ? 'd-block' : 'd-none');
+    }, [props.isHidden])
+
+    const handleFormValidation = (isValid, fontFamily, file) => {
+        setFormValid(isValid);
+        setfileData({
+            file: file,
+            fontFamily: fontFamily
+        });
+    }
+
+    return(
+        <div className={`modal ${hiddenClass}`} tabIndex="-1" role="dialog" style={{background: 'rgba(0,0,0,0.5)'}}>
+            <div className="modal-dialog" role="document">
+                <div className="modal-content">
+                <div className="modal-header">
+                    <h5 className="modal-title">{props.title}</h5>
+                    <button type="button" className="close-btn-cf" data-dismiss="modal" aria-label="Close" onClick={handleClose}>
+                    <span aria-hidden="true">&times;</span>
+                    </button>
+                </div>
+                <div className="modal-body">
+                    <UploadFont checkFormValid={handleFormValidation}></UploadFont>
+                </div>
+                <div className="modal-footer">
+                    <button type="button" className="btn save-btn-cf btn-primary" onClick={handleSave} disabled={!isFormValid}>Save changes</button>
+                    <button type="button" className="btn cancel-btn-cf btn-secondary" data-dismiss="modal" onClick={handleClose}>Close</button>
+                </div>
+                </div>
+            </div>
+        </div>
+    )
+}
+
+UploadFontModal.defaultProps = {
+    isHidden: true,
+    title: 'Upload Custom font'
+}
+
+export {
+    UploadFontModal
+}
\ No newline at end of file
diff --git a/src/components/shared/group_icon.js b/src/components/shared/group_icon.js
index ddf619d..a687307 100644
--- a/src/components/shared/group_icon.js
+++ b/src/components/shared/group_icon.js
@@ -4,29 +4,29 @@ import { AiFillTwitterCircle, AiFillFacebook, AiFillMail, AiOutlineWhatsApp } fr
 import { BsMessenger } from 'react-icons/bs';
 import { Col, Row } from 'react-bootstrap';
 
-const IconMap = {
-    'facebook': <AiFillFacebook color='#3b5998'/>,
-    'twitter': <AiFillTwitterCircle color='#55acee' />,
-    'gmail': <AiFillMail color='#dc4e41' />,
-    'whatsapp': <AiOutlineWhatsApp color='#43d854'/>,
-    'messenger': <BsMessenger color='#006AFF'/>
-};
 
-const Icons = ({ name }) => {
-    const renderIcon = IconMap[name] || IconMap[0];
-    return(
-        <div className='icon-cnt'>
-            <div className='icon-outline'>
-                {renderIcon}
-            </div>
-        </div>
-    )
-}
 
 const GroupIcon = (props) => {
     const columns = props.columns || 2;
     const rows = props.rows || 2;
     const icons = props.iconData || ['facebook'];
+    const IconMap = {
+        'facebook': <AiFillFacebook color='#3b5998'/>,
+        'twitter': <AiFillTwitterCircle color='#55acee' />,
+        'gmail': <AiFillMail color='#dc4e41' />,
+        'whatsapp': <AiOutlineWhatsApp color='#43d854'/>,
+        'messenger': <BsMessenger color='#006AFF'/>
+    };
+    const Icons = ({ name }) => {
+        const renderIcon = IconMap[name] || IconMap[0];
+        return(
+            <div className='icon-cnt'>
+                <div  onClick={(event) => {props.iconClicked(event, name) }} className='icon-outline'>
+                    {renderIcon}
+                </div>
+            </div>
+        )
+    }
 
     let rowArray = [];
     let columnArray = [];
diff --git a/src/components/shared/shared.scss b/src/components/shared/shared.scss
index e17f648..3a45114 100644
--- a/src/components/shared/shared.scss
+++ b/src/components/shared/shared.scss
@@ -1,31 +1,23 @@
 @import '../../styles/variables';
 
 #view-header{
-    color: $view-header-color;
-    font-size: $view-header-font-sz;
     text-transform: uppercase;
     text-shadow: none;
     padding-bottom: 5px;
     border-bottom: solid 2px #d4d4d4;
-    font-weight: 300;
+    cursor: pointer;
 }
 
 .view-title{
-    color: $view-header-color;
-    font-size: $view-title-font-sz;
-    font-weight: 600;
-    font-family: fangsong;
     line-height: normal;
     margin-top: 1em;
+    cursor: pointer;
 }
 
 .view-secondary-title{
-    color: $view-header-color;
-    font-size: $view-secondary-title-font-sz;
-    font-weight: 600;
-    font-family: fangsong;
     line-height: normal;
     margin-top: 1em;
+    cursor: pointer;
 }
 
 /* Icons */
@@ -33,6 +25,7 @@
     margin-right: 5em;
     width: inherit;
     padding: 10px;
+    cursor: pointer;
 }
 
 .icon-outline{
@@ -122,12 +115,17 @@ hr {
 
 /* button */
 .app-btn{
-    background: $primary-btn-bk;
-    border: none;
     width: 100%;
     padding: 10px;
-    border-radius: $border-radius;
-    color: white;
     text-transform: uppercase;
-    font-weight: 600;
+}
+
+.hover-edit:hover, .hover-edit:focus-within, input:focus::placeholder, input:hover::placeholder  {
+    outline: 2px dashed red !important;
+    outline-offset: -1px !important;
+}
+
+.icon-selected {
+    border: 1px rgba(0, 173, 196, 0.5019607843) solid;
+    background: lightgrey;
 }
\ No newline at end of file
diff --git a/src/components/shared/upload-fonts.js b/src/components/shared/upload-fonts.js
new file mode 100644
index 0000000..13de71a
--- /dev/null
+++ b/src/components/shared/upload-fonts.js
@@ -0,0 +1,69 @@
+import React, { useEffect, useState } from 'react';
+
+const allowedExtension = ['.otf', '.ttf', '.svg', '.eot', '.woff', '.woff2'];
+
+const PreviewFont = (file) => {
+
+    const [filePath, setfilePath] = useState('');
+
+    if(file && file.file) {
+        var reader = new FileReader();
+        reader.onload = function (e) { 
+            const filePath = `
+                @font-face {    
+                    font-family: preview; src: url(${e.target.result})
+                }
+                .preview {
+                    font-family: preview;
+                }
+            `;
+            setfilePath(filePath);
+        }
+        reader.readAsDataURL(file.file);
+    }
+
+    return (
+        <div>
+            <style>{filePath ? filePath : 'No Preview Avaialble'}</style>
+            <hr/>
+            <h4 className="text-center">Preview Text</h4>
+        </div>
+    )
+}
+
+const UploadFont = (props) => {
+
+    const [filename, setfilename] = useState('');
+    const [file, setfile] = useState('');
+
+    const validateForm = () => {
+        props.checkFormValid((file && filename) ? true : false, filename, file);
+    }
+
+    useEffect(() => {
+        validateForm();
+    }, [filename, file])
+
+    return(
+        <form action='.'>
+            <div>Font family name</div>
+            <input type='text' className='custom-font-name common-text-style' onChange={(event) => setfilename(event.target.value)}></input>
+            <input className='mt-4' type='file' accept={allowedExtension}
+            onChange={(event) => setfile(event.target.files[0])}></input>
+
+            <div className={`preview ${file ? 'd-block' : 'd-none'}`}>
+                <PreviewFont file={file}></PreviewFont>
+            </div>
+        </form>
+    )
+}
+
+UploadFont.defaultProps = {
+    filename: '',
+    file: null,
+    checkFormValid: () => {}
+}
+
+export {
+    UploadFont
+}
\ No newline at end of file
diff --git a/src/components/shared/util.js b/src/components/shared/util.js
new file mode 100644
index 0000000..183b885
--- /dev/null
+++ b/src/components/shared/util.js
@@ -0,0 +1,10 @@
+const Util = {
+    blockEdit: (event) => {
+        event.preventDefault();
+    },
+    blockPropagation(event) {
+        event.stopPropagation();
+    }
+}
+
+export default Util;
\ No newline at end of file
diff --git a/src/components/shared/view_header.js b/src/components/shared/view_header.js
index 82e88ed..ab60e50 100644
--- a/src/components/shared/view_header.js
+++ b/src/components/shared/view_header.js
@@ -1,12 +1,15 @@
 import './shared.scss';
 import React from 'react';
+import Util from '../shared/util';
 
 const ViewHeader = (props) => {
-    return(
-        <p id='view-header'>
-            { props.title || 'Header' }
+    return (
+        <p style={props.style} id='view-header' onKeyDown={(event) => Util.blockEdit(event)}
+            className='hover-edit' contentEditable='true'
+            suppressContentEditableWarning="true" onClick={() => { props.click(props.field, 'text') }}>
+            {props.title || 'Header'}
         </p>
     )
 }
 
-export default ViewHeader;
\ No newline at end of file
+export default ViewHeader
\ No newline at end of file
diff --git a/src/components/shared/view_title.js b/src/components/shared/view_title.js
index f48f5c1..4e28f56 100644
--- a/src/components/shared/view_title.js
+++ b/src/components/shared/view_title.js
@@ -1,10 +1,11 @@
 import './shared.scss';
 import React from 'react';
+import Util from '../shared/util';
 
 const ViewTitle = (props) => {
-    return(
-        <p {...props}>
-            { props.title || 'Header title' }
+    return (
+        <p className='hover-edit' onKeyDown={(event) => Util.blockEdit(event)} {...props}>
+            {props.title || 'Header title'}
         </p>
     )
 }
diff --git a/src/components/sidebar/index.js b/src/components/sidebar/index.js
index b17517a..72dc15b 100644
--- a/src/components/sidebar/index.js
+++ b/src/components/sidebar/index.js
@@ -1,15 +1,367 @@
-import React from 'react';
-
+import React, { useCallback, useEffect, useRef, useState } from "react";
+import { useNavigate } from "react-router-dom";
+import { HexColorPicker } from 'react-colorful';
 import './sidebar.scss';
+import Select from 'react-select'
+import { UploadFontModal } from "../../components/shared/font-upload-modal";
+// import {axios} from 'axios;'
+import _ from 'lodash';
+
 
 const SideBar = (props) => {
+    const selectedElementType = props?.selectedElement?.elementType;
+    const selectedElementName = props?.selectedElement?.elementName;
+    const selectedScreen = props?.selectedElement?.screen;
+    const navigate = useNavigate();
+    const bgColorPickerPopover = useRef();
+    const borderColorPickerPopover = useRef();
+    const [color, setColor] = useState('#b7b6b6');
+    const [borderColor, setBorderColor] = useState('#b7b6b6');
+    const [isBgColorPickerOpen, bgColorPickerToggle] = useState(false);
+    const [isBorderColorPickerOpen, borderColorPickerToggle] = useState(false);
+    const bgColorPickerPopoverClose = useCallback(() => bgColorPickerToggle(false), []);
+    const borderColorPickerPopoverClose = useCallback(() => borderColorPickerToggle(false), []);
+    const [isFontModalHidden, setFontModal] = useState(true);
+    const [fontSize, setFontSize] = useState(14);
+    const [textBold, setTextBold] = useState('');
+    const [textDecoration, setTextDecoration] = useState('none');
+    const [fontStyle, setFontStyle] = useState('normal');
+    const [screenObj, setScreenObj] = useState({});
+
+    useEffect(() => {
+        setScreenObj(_.cloneDeep(props.dbObject));
+    }, []);
+
+
+    const onGoogleFontSelectClick = () => {
+        document.getElementById("myDropdown").classList.toggle("show");
+    }
+
+    const options = [
+        { value: 'chocolate', label: 'Chocolate' },
+        { value: 'strawberry', label: 'Strawberry' },
+        { value: 'vanilla', label: 'Vanilla' }
+    ];
+
+    const handleCustomFontClick = () => {
+        setFontModal(false);
+    }
+
+    const onHandleCloseEvent = () => {
+        setFontModal(true);
+    }
+
+    const onFontSizeChange = (event) => {
+        if (props.selectedElement) {
+            setFontSize(event.target.value.replace(/[^0-9]/g, ''));
+        }
+
+    }
+
+    const onFontStyleClick = (event) => {
+        if (props.selectedElement) {
+            let isStyleAdded = null;
+            if (event.currentTarget.classList.contains('font-style-buttons-click')) {
+                isStyleAdded = false;
+                event.currentTarget.classList.remove('font-style-buttons-click');
+            } else {
+                isStyleAdded = true;
+                event.currentTarget.classList.add('font-style-buttons-click');
+            }
+            switch (event.currentTarget.id) {
+                case 'bold-btn':
+                    if (isStyleAdded) {
+                        setTextBold('bold');
+                    } else {
+                        setTextBold('300');
+                    }
+                    break;
+                case 'underline-btn':
+                    if (isStyleAdded) {
+                        setTextDecoration('underline');
+                    } else {
+                        setTextDecoration('none');
+                    }
+                    break;
+                case 'italic-btn':
+                    if (isStyleAdded) {
+                        setFontStyle('italic');
+                    } else {
+                        setFontStyle('normal');
+                    }
+                    break;
+            }
+        }
+    }
+
+    useEffect(() => {
+        screenObj && props.updateValue({
+            data: screenObj, screen: selectedScreen, id: selectedElementName, param: 'fontSize', val: `${fontSize}px`, selector: 'style'
+        });
+    }, [fontSize]);
+
+    useEffect(() => {
+        screenObj && props.updateValue({
+            data: screenObj, screen: selectedScreen, id: selectedElementName, param: 'fontWeight', val: textBold, selector: 'style'
+        });
+    }, [textBold]);
+
+    useEffect(() => {
+        screenObj && props.updateValue({
+            data: screenObj, screen: selectedScreen, id: selectedElementName, param: 'textDecoration', val: textDecoration, selector: 'style'
+        });
+    }, [textDecoration]);
+
+    useEffect(() => {
+        screenObj && props.updateValue({
+            data: screenObj, screen: selectedScreen, id: selectedElementName, param: 'fontStyle', val: fontStyle, selector: 'style'
+        });
+    }, [fontStyle]);
+
+    useEffect(() => {
+        const param = selectedElementType === 'text' ? 'color' : 'backgroundColor';
+        screenObj && props.updateValue({
+            data: screenObj, screen: selectedScreen, id: selectedElementName, param: param, val: color, selector: 'style'
+        });
+    }, [color]);
+
+    useEffect(() => {
+        console.log(9999, selectedElementType);
+        if (selectedElementType) {
+            const color = props?.dbObject[selectedScreen]?.elements[selectedElementName]?.style?.color ?
+                props?.dbObject[selectedScreen]?.elements[selectedElementName]?.style?.color :
+                props?.dbObject[selectedScreen]?.elements[selectedElementName]?.style?.backgroundColor;
+            setColor(color);
+        }
+    }, [selectedElementType]);
+
+    const onHandleSaveEvent = (filedata) => {
+        // const token = `${`Bearer ` + props.widgetContext.session}`;
+        // const blob = filedata.file;
+        // const formData = new FormData();
+        // formData.append("name", filedata.fontFamily);
+        // formData.append("filename", blob);
+        // try {
+        //     axios({
+        //         method: 'post',
+        //         url: 'http://widgetapi.j-cos.me/api/fonts',
+        //         data: formData,
+        //         headers: {
+        //             'Authorization': token, 'admin-id': adminId,
+        //             'Content-Type': 'multipart/form-data'
+        //         }
+        //     }).then(data => {
+        //         setCustomFonts(data.data.data);
+        //         const sheet = window.document.styleSheets[0];
+        //         const latestFont = data.data.data[data.data.data.length - 1];
+        //         sheet.insertRule(`@font-face {font-family: ${latestFont.filename};font-style: normal;font-weight: normal;src:url(${latestFont.filepath});}`, sheet.cssRules.length);
+        //     });
+        // } catch (error) {
+        //     console.log('errorerrorerrorerrorerror');
+        //     return [];
+        // }
+    }
+
+    const BorderColorPickerOutSideClick = (ref, handler) => {
+        useEffect(() => {
+            let startedInside = false;
+            let startedWhenMounted = false;
+            const listener = (event) => {
+                // Do nothing if `mousedown` or `touchstart` started inside ref element
+                if (startedInside || !startedWhenMounted) return;
+                // Do nothing if clicking ref's element or descendent elements
+                if (!ref.current || ref.current.contains(event.target)) return;
+                handler(event);
+            };
+            const validateEventStart = (event) => {
+                startedWhenMounted = ref.current;
+                startedInside = ref.current && ref.current.contains(event.target);
+            };
+            document.addEventListener('mousedown', validateEventStart);
+            document.addEventListener('touchstart', validateEventStart);
+            document.addEventListener('click', listener);
+            return () => {
+                document.removeEventListener('mousedown', validateEventStart);
+                document.removeEventListener('touchstart', validateEventStart);
+                document.removeEventListener('click', listener);
+            };
+        }, [ref, handler]);
+    };
+
+    const BgColorPickerOutSideClick = (ref, handler) => {
+        useEffect(() => {
+            let startedInside = false;
+            let startedWhenMounted = false;
+            const listener = (event) => {
+                // Do nothing if `mousedown` or `touchstart` started inside ref element
+                if (startedInside || !startedWhenMounted) return;
+                // Do nothing if clicking ref's element or descendent elements
+                if (!ref.current || ref.current.contains(event.target)) return;
+                handler(event);
+            };
+            const validateEventStart = (event) => {
+                startedWhenMounted = ref.current;
+                startedInside = ref.current && ref.current.contains(event.target);
+            };
+            document.addEventListener('mousedown', validateEventStart);
+            document.addEventListener('touchstart', validateEventStart);
+            document.addEventListener('click', listener);
+            return () => {
+                document.removeEventListener('mousedown', validateEventStart);
+                document.removeEventListener('touchstart', validateEventStart);
+                document.removeEventListener('click', listener);
+            };
+        }, [ref, handler]);
+    };
+
+    const filterFunction = () => {
+        const input = document.getElementById("myInput");
+        const filter = input.value.toUpperCase();
+        const div = document.getElementById("myDropdown");
+        const a = div.getElementsByTagName("a");
+        for (let i = 0; i < a.length; i++) {
+            let txtValue = a[i].textContent || a[i].innerText;
+            if (txtValue.toUpperCase().indexOf(filter) > -1) {
+                a[i].style.display = "";
+            } else {
+                a[i].style.display = "none";
+            }
+        }
+    }
+
+    const navigateClick = () => {
+        navigate('/coupons');
+    };
+
+    BgColorPickerOutSideClick(bgColorPickerPopover, bgColorPickerPopoverClose);
+    BorderColorPickerOutSideClick(borderColorPickerPopover, borderColorPickerPopoverClose);
+
+    const colorChange = (event) => {
+        setColor(event);
+    }
+
+    const borderColorChange = (event) => {
+        setBorderColor(event);
+    }
+
+    const bgColorInputChange = (event) => {
+        setColor(event.target.value);
+    }
+
+    const borderColorInputChange = (event) => {
+        setBorderColor(event.target.value);
+    }
 
-  return (
-    <React.Fragment>
-      <h4>Here you can add your side bar content</h4>
-    </React.Fragment>
-  );
-}
+    return (
+        <React.Fragment>
+            <div className="container-fluid d-flex flex-column h-100 align-items-center px-0">
+                <div className="row w-100">
+                    <div className="main col-12 h-100">
+                        <div id="mySidenav" className="sidenav">
+                            <div className='publish-widget-button' name="publish">
+                                <button type='button'
+                                    onClick={() => { }}>Publish widget</button>
+                                101101 {props?.selectedElement?.elementType}
+                            </div>
+                            <hr></hr>
+                            {selectedElementType !== 'button' &&
+                                <div className='font-styles-wrapper' role='group'>
+                                    <div className="mb-1">Font Styles</div>
+                                    <span className='btn-group'>
+                                        <button id='bold-btn' type='button' onClick={(event) => { onFontStyleClick(event); }}
+                                            className='btn font-style-buttons'><b><i>B</i></b></button>
+                                        <button id='italic-btn' type='button'
+                                            onClick={(event) => { onFontStyleClick(event); }} className='btn font-style-buttons'><b><i>I</i></b></button>
+                                        <button id='underline-btn' type='button'
+                                            onClick={(event) => { onFontStyleClick(event); }} className='btn font-style-buttons'><b><i>U</i></b></button>
+                                    </span>
+                                    <hr></hr>
+                                </div>
+                            }
+                            {selectedElementType !== 'button' &&
+                                <div className="font-size-wrapper w-100">
+                                    <div className="mb-1">Font Size</div>
+                                    <input type='number' value={fontSize} className="w-75 common-text-style" onChange={onFontSizeChange} />
+                                    <hr></hr>
+                                </div>}
+                            {selectedElementType !== 'button' &&
+                                <div className="fonts-list-wrapper w-100 row">
+                                    <div className="mb-1 col">Fonts</div>
+                                    {/* <button onClick={onGoogleFontSelectClick} className="dropbtn">Select Fonts</button>
+                            <div id="myDropdown" className="dropdown-content">
+                                <input type="text" placeholder="Search" onKeyUp={filterFunction} />
+                                <a href="#about">home</a>
+                                <a href="#base">contact</a>
+                            </div> */}
+                                    <Select className="col" options={options} />
+                                    <hr></hr>
+                                </div>}
+                            {selectedElementType !== 'button' &&
+                                <div className="custom-fonts-list-wrapper w-100 row">
+                                    <span className="mb-1 col">Custom Fonts</span>
+                                    <Select className="col" options={options} />
+                                </div>}
+                            {selectedElementType !== 'button' &&
+                                <div className="mt-3 custom-fonts">
+                                    <button className="btn upload-font-btn btn-secondary" onClick={handleCustomFontClick}>Upload Custom Font</button>
+                                    <UploadFontModal isHidden={isFontModalHidden}
+                                        onHandleClose={onHandleCloseEvent}
+                                        onHandleSave={onHandleSaveEvent}></UploadFontModal>
+                                    <hr></hr>
+                                </div>}
+                            <div className="bg-color-picker-container">
+                                <div>Background Color</div>
+                                <div className="bg-color-picker-controls">
+                                    <input className='color-input form-control mt-2 common-text-style' name='color-picker'
+                                        value={color}
+                                        onChange={bgColorInputChange}></input>
+                                    <div className='picker'>
+                                        <div
+                                            className='color-picker mt-2'
+                                            style={{ backgroundColor: color, border: '1px solid #5db0b9' }}
+                                            onClick={() => bgColorPickerToggle(true)}
+                                        />
 
+                                        {isBgColorPickerOpen && (
+                                            <div className='color-picker-popover' ref={bgColorPickerPopover}>
+                                                <HexColorPicker color={color} onChange={colorChange} />
+                                            </div>
+                                        )}
+                                    </div>
+                                </div>
+                            </div>
+                            <hr></hr>
+                            <div className="border-color-picker-container">
+                                <div>Border Color</div>
+                                <div className="border-color-picker-controls">
+                                    <input className='color-input form-control mt-2' name='color-picker'
+                                        value={borderColor} onChange={borderColorInputChange}></input>
+                                    <div className='picker'>
+                                        <div
+                                            className='color-picker mt-2'
+                                            style={{ backgroundColor: borderColor, border: '1px solid #5db0b9' }}
+                                            onClick={() => borderColorPickerToggle(true)}
+                                        />
 
-export default SideBar;
\ No newline at end of file
+                                        {isBorderColorPickerOpen && (
+                                            <div className='color-picker-popover' ref={borderColorPickerPopover}>
+                                                <HexColorPicker color={borderColor} onChange={borderColorChange} />
+                                            </div>
+                                        )}
+                                    </div>
+                                </div>
+                            </div>
+                            <hr></hr>
+                            <div className="border-container">
+                                <input type="checkbox" onChange={(event) => { }} className="change-border-checkbox" id="borderChange" />
+                                <label className="change-border-label" htmlFor="borderChange">Change container border</label>
+                            </div>
+                            <hr></hr>
+                        </div>
+                    </div>
+                </div>
+            </div>
+        </React.Fragment>
+    );
+};
+export default SideBar
\ No newline at end of file
diff --git a/src/components/sidebar/sidebar.scss b/src/components/sidebar/sidebar.scss
index 5d4b173..acabc09 100644
--- a/src/components/sidebar/sidebar.scss
+++ b/src/components/sidebar/sidebar.scss
@@ -3,4 +3,247 @@
     font-size: 2em;
     float: right;
     margin: 5px;
-}
\ No newline at end of file
+}
+
+#myInput {
+    box-sizing: border-box;
+    background-position: 14px 12px;
+    background-repeat: no-repeat;
+    font-size: 16px;
+    padding: 14px 20px 12px 45px;
+    border: none;
+    border-bottom: 1px solid #ddd;
+  }
+  
+  // .dropdown-content {
+  //   display: none;
+  //   position: absolute;
+  //   background-color: #f6f6f6;
+  //   min-width: 230px;
+  //   overflow: auto;
+  //   border: 1px solid #ddd;
+  //   z-index: 1;
+  // }
+  
+  // .dropdown-content a {
+  //   color: black;
+  //   padding: 12px 16px;
+  //   text-decoration: none;
+  //   display: block;
+  // }
+  
+  // .dropdown a:hover {
+  //   background-color: #ddd;
+  // }
+  
+  // .show {
+  //   display: block;
+  // }
+  
+  //////////////////////// color picker ////////////////////////
+  
+  .picker {
+    position: relative;
+    float: left;
+  }
+  
+  .color-picker {
+    width: 39px;
+    height: 39px;
+    border-radius: 8px;
+    border: 3px solid #fff;
+    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1), inset 0 0 0 1px rgba(0, 0, 0, 0.1);
+    cursor: pointer;
+  }
+  
+  .color-input {
+    float: left;
+    width: 7.5em !important;
+  }
+  
+  .color-input:focus {
+    box-shadow: none !important;
+  }
+  
+  
+  .color-picker-popover {
+    position: absolute;
+    top: calc(54% + 2px);
+    right: 0;
+    border-radius: 9px;
+    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
+  }
+  
+  .react-colorful {
+    height: 100px;
+    width: 100px;
+    z-index: 999;
+  }
+  
+  .common-text-style {
+    border: 1px solid #5db0b9;
+    background-color: white;
+    padding: 0.2em;
+  }
+  
+  //////////////////////// other styles //////////////////////////////
+  
+  .publish-widget-button {
+    button {
+      background: #5db0b9;
+      border: none;
+      width: 90%;
+      border-radius: 5px;
+      color: white;
+      text-transform: uppercase;
+      font-weight: 600;
+      padding: 0.4em;
+    }
+  }
+  
+  .font-styles-wrapper {
+    .btn-group {
+      width: 90%;
+      border: 1px solid #5db0b9;
+      border-radius: 0.6em;
+    }
+  }
+  
+  .font-style-buttons {
+    color: var(--bs-btn-hover-color);
+    background-color: var(--bs-btn-hover-bg);
+    border-color: var(--bs-btn-hover-border-color);
+  }
+
+  .font-style-buttons-click {
+    background-color: #5db0b9;
+  }
+
+  .font-style-buttons:hover {
+    background-color: #5db0b9;
+  }
+  
+  .font-style-buttons:not(:last-child) {
+    border-right: 1px solid #5db0b9;
+    border-width: 0.1em;
+  }
+  
+  .font-size-wrapper {
+    display: block;
+  
+    input {
+      border-radius: 5px;
+      font-size: 16px;
+      color: rgba(0, 0, 0, 0.6117647059);
+      outline: 0;
+      flex: 0.25;
+      width: 10em;
+      margin-right: 0.4em;
+    }
+  }
+  
+  .fonts-list-wrapper,
+  .custom-fonts-list-wrapper {
+    display: block;
+  
+    .css-b62m3t-container {
+      width: 70%;
+      margin: 0 auto;
+      .css-13cymwt-control {
+        background-color: #5db0b9;
+      }
+      .css-1u9des2-indicatorSeparator {
+        display: none;
+      }
+      .css-1xc3v61-indicatorContainer,.css-1jqq78o-placeholder {
+        color: white;
+        font-weight: 700;
+      }
+    }
+  
+    button {
+      background: #5db0b9;
+      border: none;
+      border-radius: 5px;
+      color: white;
+      text-transform: uppercase;
+      font-weight: 600;
+      flex: 2.5em;
+      margin-right: 0.8em;
+    }
+  }
+  
+  .bg-color-picker-container,
+  .border-color-picker-container {
+    height: 4.5em;
+  
+    .bg-color-picker-controls,
+    .border-color-picker-controls {
+      margin-left: 2.2em;
+      width: 31em;
+  
+      .color-input {
+        width: 12.5em !important;
+        border-radius: 5px;
+        font-size: 16px;
+        color: rgba(0, 0, 0, 0.6117647059);
+        margin-right: 0.2em;
+      }
+    }
+  }
+  
+  /////////////////////////// custom fonts ////////////////////////////////////
+  
+  .custom-fonts {
+    .upload-font-btn {
+      background: #5db0b9;
+      border: none;
+      border-radius: 5px;
+      color: white;
+      text-transform: uppercase;
+      font-weight: 600;
+      flex: 2.5em;
+      margin-right: 0.8em;
+    }
+  }
+  
+  .modal-header {
+    background: #e3e3e3;
+  }
+  
+  .modal-body {
+    text-align: left;
+  }
+  
+  .close-btn-cf {
+    background: #5db0b9;
+    border-radius: 5px;
+    outline: 0;
+    color: white;
+    border: solid 1px #e3e3e3;
+    box-shadow: none;
+  }
+  
+  .modal-footer {
+    background: #e3e3e3;
+  
+    .save-btn-cf,
+    .cancel-btn-cf {
+      background: #5db0b9;
+      border: 1px solid gray;
+      border-radius: 5px;
+      outline: 0;
+    }
+  }
+  
+  .custom-font-name {
+    border-radius: 5px;
+    padding: 0.2em;
+    font-size: 16px;
+    text-transform: uppercase;
+    color: rgba(0, 0, 0, 0.6117647059);
+    outline: 0;
+    margin-bottom: 1em;
+  }
+  
+  ///////////////////////////////////////////////////////////////////
\ No newline at end of file
diff --git a/src/state/reducer/gift_card.js b/src/state/reducer/gift_card.js
index 8d9a719..df03b79 100644
--- a/src/state/reducer/gift_card.js
+++ b/src/state/reducer/gift_card.js
@@ -4,15 +4,70 @@ const intialState = {
     emailId: ''
 }
 
-const giftCard = (state = intialState, action) => {
+const giftCard = (state = null, action) => {
     switch (action.type) {
         case ACTION.LOAD_GIFT:
             return state;
         case ACTION.UPDATE_EMAIL:
             return Object.assign({}, state, { emailId: action.payload});
+            case 'load_db_success': {
+                const {
+                  thanksScreen,
+                  welcomeScreen,
+                  id,
+                  adminId,
+                  coverImage,
+                  identifier,
+                  shareLink,
+                  roundCont
+                } = action.payload;
+                return {
+                  ...state,
+                  thanksScreen,
+                  welcomeScreen,
+                  id,
+                  adminId,
+                  coverImage,
+                  identifier,
+                  shareLink,
+                  isLoading: false,
+                  roundCont
+                }
+              }
         default:
             return state;
     }
 }
 
-export { giftCard }
\ No newline at end of file
+const reducer = (state = null, action) => {
+  switch (action.type) {
+      case 'UPDATE_STYLE':
+          return {
+              ...state,
+              widgetId: {
+                  ...state.widgetId,
+                  [action.payload.prop.screen]: {
+                      ...state.widgetId[action.payload.prop.screen],
+                      elements: {
+                          ...state.widgetId[action.payload.prop.screen].elements,
+                          [action.payload.prop.id]: {
+                              ...state.widgetId[action.payload.prop.screen].elements[action.payload.prop.id],
+                              style: {
+                                  ...state.widgetId[action.payload.prop.screen]
+                                      .elements[action.payload.prop.id].style,
+                                  [action.payload.prop.param]:
+                                      action.payload.prop.val,
+                              },
+                          },
+                      },
+                  },
+              },
+          };
+      case 'UPDATE_TEXT':
+          return state - 1;
+      default:
+          return state;
+  }
+};
+
+export { giftCard, reducer }
\ No newline at end of file
-- 
2.37.1 (Apple Git-137.1)

